
nrf24l_bme280_nano.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000182  00800100  00000e2a  00000ebe  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000e2a  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000029  00800282  00800282  00001040  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00001040  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  0000109c  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000108  00000000  00000000  000010dc  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00001a0e  00000000  00000000  000011e4  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000bd0  00000000  00000000  00002bf2  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000b3f  00000000  00000000  000037c2  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000290  00000000  00000000  00004304  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    0000060f  00000000  00000000  00004594  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000969  00000000  00000000  00004ba3  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000000c8  00000000  00000000  0000550c  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 44 01 	jmp	0x288	; 0x288 <__vector_1>
   8:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
   c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  10:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  14:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  18:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  1c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  20:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  24:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  28:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  2c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  30:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  34:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  38:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  3c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  40:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  44:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  48:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  4c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  50:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  54:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  58:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  5c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  60:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  64:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61

00000074 <__do_copy_data>:
  74:	12 e0       	ldi	r17, 0x02	; 2
  76:	a0 e0       	ldi	r26, 0x00	; 0
  78:	b1 e0       	ldi	r27, 0x01	; 1
  7a:	ea e2       	ldi	r30, 0x2A	; 42
  7c:	fe e0       	ldi	r31, 0x0E	; 14
  7e:	02 c0       	rjmp	.+4      	; 0x84 <__do_copy_data+0x10>
  80:	05 90       	lpm	r0, Z+
  82:	0d 92       	st	X+, r0
  84:	a2 38       	cpi	r26, 0x82	; 130
  86:	b1 07       	cpc	r27, r17
  88:	d9 f7       	brne	.-10     	; 0x80 <__do_copy_data+0xc>

0000008a <__do_clear_bss>:
  8a:	22 e0       	ldi	r18, 0x02	; 2
  8c:	a2 e8       	ldi	r26, 0x82	; 130
  8e:	b2 e0       	ldi	r27, 0x02	; 2
  90:	01 c0       	rjmp	.+2      	; 0x94 <.do_clear_bss_start>

00000092 <.do_clear_bss_loop>:
  92:	1d 92       	st	X+, r1

00000094 <.do_clear_bss_start>:
  94:	ab 3a       	cpi	r26, 0xAB	; 171
  96:	b2 07       	cpc	r27, r18
  98:	e1 f7       	brne	.-8      	; 0x92 <.do_clear_bss_loop>
  9a:	0e 94 f5 00 	call	0x1ea	; 0x1ea <main>
  9e:	0c 94 13 07 	jmp	0xe26	; 0xe26 <_exit>

000000a2 <__bad_interrupt>:
  a2:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000a6 <print_config>:
#include "includes/nrf24l01.h"
#include "includes/nrf24l01-mnemonics.h"
#include "includes/spi.h"

void print_config(void)
{
  a6:	cf 93       	push	r28
  a8:	df 93       	push	r29
  aa:	1f 92       	push	r1
  ac:	cd b7       	in	r28, 0x3d	; 61
  ae:	de b7       	in	r29, 0x3e	; 62
	uint8_t data;
	printf("Startup successful\n\n nRF24L01+ configured as:\n");
  b0:	86 e2       	ldi	r24, 0x26	; 38
  b2:	91 e0       	ldi	r25, 0x01	; 1
  b4:	0e 94 1b 04 	call	0x836	; 0x836 <puts>
	printf("-------------------------------------------\n");
  b8:	84 e5       	ldi	r24, 0x54	; 84
  ba:	91 e0       	ldi	r25, 0x01	; 1
  bc:	0e 94 1b 04 	call	0x836	; 0x836 <puts>
	nrf24_read(CONFIG,&data,1);
  c0:	41 e0       	ldi	r20, 0x01	; 1
  c2:	50 e0       	ldi	r21, 0x00	; 0
  c4:	be 01       	movw	r22, r28
  c6:	6f 5f       	subi	r22, 0xFF	; 255
  c8:	7f 4f       	sbci	r23, 0xFF	; 255
  ca:	80 e0       	ldi	r24, 0x00	; 0
  cc:	0e 94 86 01 	call	0x30c	; 0x30c <nrf24_read>
	printf("CONFIG		0x%x\n",data);
  d0:	89 81       	ldd	r24, Y+1	; 0x01
  d2:	1f 92       	push	r1
  d4:	8f 93       	push	r24
  d6:	80 e8       	ldi	r24, 0x80	; 128
  d8:	91 e0       	ldi	r25, 0x01	; 1
  da:	9f 93       	push	r25
  dc:	8f 93       	push	r24
  de:	0e 94 05 04 	call	0x80a	; 0x80a <printf>
	nrf24_read(EN_AA,&data,1);
  e2:	41 e0       	ldi	r20, 0x01	; 1
  e4:	50 e0       	ldi	r21, 0x00	; 0
  e6:	be 01       	movw	r22, r28
  e8:	6f 5f       	subi	r22, 0xFF	; 255
  ea:	7f 4f       	sbci	r23, 0xFF	; 255
  ec:	81 e0       	ldi	r24, 0x01	; 1
  ee:	0e 94 86 01 	call	0x30c	; 0x30c <nrf24_read>
	printf("EN_AA			0x%x\n",data);
  f2:	89 81       	ldd	r24, Y+1	; 0x01
  f4:	1f 92       	push	r1
  f6:	8f 93       	push	r24
  f8:	8e e8       	ldi	r24, 0x8E	; 142
  fa:	91 e0       	ldi	r25, 0x01	; 1
  fc:	9f 93       	push	r25
  fe:	8f 93       	push	r24
 100:	0e 94 05 04 	call	0x80a	; 0x80a <printf>
	nrf24_read(EN_RXADDR,&data,1);
 104:	41 e0       	ldi	r20, 0x01	; 1
 106:	50 e0       	ldi	r21, 0x00	; 0
 108:	be 01       	movw	r22, r28
 10a:	6f 5f       	subi	r22, 0xFF	; 255
 10c:	7f 4f       	sbci	r23, 0xFF	; 255
 10e:	82 e0       	ldi	r24, 0x02	; 2
 110:	0e 94 86 01 	call	0x30c	; 0x30c <nrf24_read>
	printf("EN_RXADDR		0x%x\n",data);
 114:	89 81       	ldd	r24, Y+1	; 0x01
 116:	1f 92       	push	r1
 118:	8f 93       	push	r24
 11a:	8c e9       	ldi	r24, 0x9C	; 156
 11c:	91 e0       	ldi	r25, 0x01	; 1
 11e:	9f 93       	push	r25
 120:	8f 93       	push	r24
 122:	0e 94 05 04 	call	0x80a	; 0x80a <printf>
	nrf24_read(SETUP_RETR,&data,1);
 126:	41 e0       	ldi	r20, 0x01	; 1
 128:	50 e0       	ldi	r21, 0x00	; 0
 12a:	be 01       	movw	r22, r28
 12c:	6f 5f       	subi	r22, 0xFF	; 255
 12e:	7f 4f       	sbci	r23, 0xFF	; 255
 130:	84 e0       	ldi	r24, 0x04	; 4
 132:	0e 94 86 01 	call	0x30c	; 0x30c <nrf24_read>
	printf("SETUP_RETR		0x%x\n",data);
 136:	89 81       	ldd	r24, Y+1	; 0x01
 138:	1f 92       	push	r1
 13a:	8f 93       	push	r24
 13c:	8d ea       	ldi	r24, 0xAD	; 173
 13e:	91 e0       	ldi	r25, 0x01	; 1
 140:	9f 93       	push	r25
 142:	8f 93       	push	r24
 144:	0e 94 05 04 	call	0x80a	; 0x80a <printf>
	nrf24_read(RF_CH,&data,1);
 148:	41 e0       	ldi	r20, 0x01	; 1
 14a:	50 e0       	ldi	r21, 0x00	; 0
 14c:	be 01       	movw	r22, r28
 14e:	6f 5f       	subi	r22, 0xFF	; 255
 150:	7f 4f       	sbci	r23, 0xFF	; 255
 152:	85 e0       	ldi	r24, 0x05	; 5
 154:	0e 94 86 01 	call	0x30c	; 0x30c <nrf24_read>
	printf("RF_CH			0x%x\n",data);
 158:	89 81       	ldd	r24, Y+1	; 0x01
 15a:	1f 92       	push	r1
 15c:	8f 93       	push	r24
 15e:	8f eb       	ldi	r24, 0xBF	; 191
 160:	91 e0       	ldi	r25, 0x01	; 1
 162:	9f 93       	push	r25
 164:	8f 93       	push	r24
 166:	0e 94 05 04 	call	0x80a	; 0x80a <printf>
	nrf24_read(RF_SETUP,&data,1);
 16a:	41 e0       	ldi	r20, 0x01	; 1
 16c:	50 e0       	ldi	r21, 0x00	; 0
 16e:	be 01       	movw	r22, r28
 170:	6f 5f       	subi	r22, 0xFF	; 255
 172:	7f 4f       	sbci	r23, 0xFF	; 255
 174:	86 e0       	ldi	r24, 0x06	; 6
 176:	0e 94 86 01 	call	0x30c	; 0x30c <nrf24_read>
	printf("RF_SETUP		0x%x\n",data);
 17a:	89 81       	ldd	r24, Y+1	; 0x01
 17c:	1f 92       	push	r1
 17e:	8f 93       	push	r24
 180:	8d ec       	ldi	r24, 0xCD	; 205
 182:	91 e0       	ldi	r25, 0x01	; 1
 184:	9f 93       	push	r25
 186:	8f 93       	push	r24
 188:	0e 94 05 04 	call	0x80a	; 0x80a <printf>
	nrf24_read(STATUS,&data,1);
 18c:	41 e0       	ldi	r20, 0x01	; 1
 18e:	50 e0       	ldi	r21, 0x00	; 0
 190:	be 01       	movw	r22, r28
 192:	6f 5f       	subi	r22, 0xFF	; 255
 194:	7f 4f       	sbci	r23, 0xFF	; 255
 196:	87 e0       	ldi	r24, 0x07	; 7
 198:	0e 94 86 01 	call	0x30c	; 0x30c <nrf24_read>
	printf("STATUS		0x%x\n",data);
 19c:	89 81       	ldd	r24, Y+1	; 0x01
 19e:	1f 92       	push	r1
 1a0:	8f 93       	push	r24
 1a2:	8d ed       	ldi	r24, 0xDD	; 221
 1a4:	91 e0       	ldi	r25, 0x01	; 1
 1a6:	9f 93       	push	r25
 1a8:	8f 93       	push	r24
 1aa:	0e 94 05 04 	call	0x80a	; 0x80a <printf>
	nrf24_read(FEATURE,&data,1);
 1ae:	41 e0       	ldi	r20, 0x01	; 1
 1b0:	50 e0       	ldi	r21, 0x00	; 0
 1b2:	be 01       	movw	r22, r28
 1b4:	6f 5f       	subi	r22, 0xFF	; 255
 1b6:	7f 4f       	sbci	r23, 0xFF	; 255
 1b8:	8d e1       	ldi	r24, 0x1D	; 29
 1ba:	0e 94 86 01 	call	0x30c	; 0x30c <nrf24_read>
	printf("FEATURE		0x%x\n",data);
 1be:	89 81       	ldd	r24, Y+1	; 0x01
 1c0:	1f 92       	push	r1
 1c2:	8f 93       	push	r24
 1c4:	8b ee       	ldi	r24, 0xEB	; 235
 1c6:	91 e0       	ldi	r25, 0x01	; 1
 1c8:	9f 93       	push	r25
 1ca:	8f 93       	push	r24
 1cc:	0e 94 05 04 	call	0x80a	; 0x80a <printf>
	printf("-------------------------------------------\n\n");
 1d0:	0f b6       	in	r0, 0x3f	; 63
 1d2:	f8 94       	cli
 1d4:	de bf       	out	0x3e, r29	; 62
 1d6:	0f be       	out	0x3f, r0	; 63
 1d8:	cd bf       	out	0x3d, r28	; 61
 1da:	8a ef       	ldi	r24, 0xFA	; 250
 1dc:	91 e0       	ldi	r25, 0x01	; 1
 1de:	0e 94 1b 04 	call	0x836	; 0x836 <puts>
}
 1e2:	0f 90       	pop	r0
 1e4:	df 91       	pop	r29
 1e6:	cf 91       	pop	r28
 1e8:	08 95       	ret

000001ea <main>:
volatile bool message_received = false;
volatile bool status = false;


int main(void)
{
 1ea:	cf 93       	push	r28
 1ec:	df 93       	push	r29
 1ee:	cd b7       	in	r28, 0x3d	; 61
 1f0:	de b7       	in	r29, 0x3e	; 62
 1f2:	a0 97       	sbiw	r28, 0x20	; 32
 1f4:	0f b6       	in	r0, 0x3f	; 63
 1f6:	f8 94       	cli
 1f8:	de bf       	out	0x3e, r29	; 62
 1fa:	0f be       	out	0x3f, r0	; 63
 1fc:	cd bf       	out	0x3d, r28	; 61
    /* Replace with your application code */
	char tx_message[32];
	strcpy(tx_message, "Hello from Nano");
 1fe:	80 e1       	ldi	r24, 0x10	; 16
 200:	e7 e2       	ldi	r30, 0x27	; 39
 202:	f2 e0       	ldi	r31, 0x02	; 2
 204:	de 01       	movw	r26, r28
 206:	11 96       	adiw	r26, 0x01	; 1
 208:	01 90       	ld	r0, Z+
 20a:	0d 92       	st	X+, r0
 20c:	8a 95       	dec	r24
 20e:	e1 f7       	brne	.-8      	; 0x208 <main+0x1e>
	
	// Initialize UART
	uart_init();
 210:	0e 94 eb 03 	call	0x7d6	; 0x7d6 <uart_init>
	
	// Initialize NRF24L01 and print config
	nrf24_init();
 214:	0e 94 89 01 	call	0x312	; 0x312 <nrf24_init>
	print_config();
 218:	0e 94 53 00 	call	0xa6	; 0xa6 <print_config>
	
	// Start listening incoming messages
	nrf24_start_listening();
 21c:	0e 94 bc 02 	call	0x578	; 0x578 <nrf24_start_listening>
	
	
    while (1) 
    {
		if(message_received)
 220:	80 91 83 02 	lds	r24, 0x0283	; 0x800283 <message_received>
 224:	88 23       	and	r24, r24
 226:	e1 f3       	breq	.-8      	; 0x220 <main+0x36>
		{
			// Message received, print it to console
			message_received = false;
 228:	10 92 83 02 	sts	0x0283, r1	; 0x800283 <message_received>
			printf("Received message: %s\n", nrf24_read_message());
 22c:	0e 94 83 03 	call	0x706	; 0x706 <nrf24_read_message>
 230:	9f 93       	push	r25
 232:	8f 93       	push	r24
 234:	87 e3       	ldi	r24, 0x37	; 55
 236:	92 e0       	ldi	r25, 0x02	; 2
 238:	9f 93       	push	r25
 23a:	8f 93       	push	r24
 23c:	0e 94 05 04 	call	0x80a	; 0x80a <printf>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 240:	2f ef       	ldi	r18, 0xFF	; 255
 242:	89 e6       	ldi	r24, 0x69	; 105
 244:	98 e1       	ldi	r25, 0x18	; 24
 246:	21 50       	subi	r18, 0x01	; 1
 248:	80 40       	sbci	r24, 0x00	; 0
 24a:	90 40       	sbci	r25, 0x00	; 0
 24c:	e1 f7       	brne	.-8      	; 0x246 <main+0x5c>
 24e:	00 c0       	rjmp	.+0      	; 0x250 <main+0x66>
 250:	00 00       	nop
			// Send message as response
			_delay_ms(500);
			status = nrf24_send_message(tx_message);
 252:	ce 01       	movw	r24, r28
 254:	01 96       	adiw	r24, 0x01	; 1
 256:	0e 94 c9 02 	call	0x592	; 0x592 <nrf24_send_message>
 25a:	91 e0       	ldi	r25, 0x01	; 1
 25c:	0f 90       	pop	r0
 25e:	0f 90       	pop	r0
 260:	0f 90       	pop	r0
 262:	0f 90       	pop	r0
 264:	81 11       	cpse	r24, r1
 266:	01 c0       	rjmp	.+2      	; 0x26a <main+0x80>
 268:	90 e0       	ldi	r25, 0x00	; 0
 26a:	90 93 82 02 	sts	0x0282, r25	; 0x800282 <__data_end>
			if(status == true) printf("Message sent successfully");
 26e:	80 91 82 02 	lds	r24, 0x0282	; 0x800282 <__data_end>
 272:	88 23       	and	r24, r24
 274:	a9 f2       	breq	.-86     	; 0x220 <main+0x36>
 276:	8d e4       	ldi	r24, 0x4D	; 77
 278:	92 e0       	ldi	r25, 0x02	; 2
 27a:	9f 93       	push	r25
 27c:	8f 93       	push	r24
 27e:	0e 94 05 04 	call	0x80a	; 0x80a <printf>
 282:	0f 90       	pop	r0
 284:	0f 90       	pop	r0
 286:	cc cf       	rjmp	.-104    	; 0x220 <main+0x36>

00000288 <__vector_1>:
		}
    }
}

ISR(INT0_vect)
{
 288:	1f 92       	push	r1
 28a:	0f 92       	push	r0
 28c:	0f b6       	in	r0, 0x3f	; 63
 28e:	0f 92       	push	r0
 290:	11 24       	eor	r1, r1
 292:	8f 93       	push	r24
	message_received = true;
 294:	81 e0       	ldi	r24, 0x01	; 1
 296:	80 93 83 02 	sts	0x0283, r24	; 0x800283 <message_received>
}
 29a:	8f 91       	pop	r24
 29c:	0f 90       	pop	r0
 29e:	0f be       	out	0x3f, r0	; 63
 2a0:	0f 90       	pop	r0
 2a2:	1f 90       	pop	r1
 2a4:	18 95       	reti

000002a6 <nrf24_send_spi>:
{
	uint8_t config_register;
	nrf24_read(FIFO_STATUS,&config_register,1);
	if (!(config_register & (1 << RX_EMPTY))) return 1;
	return 0;
}
 2a6:	bf 92       	push	r11
 2a8:	cf 92       	push	r12
 2aa:	df 92       	push	r13
 2ac:	ef 92       	push	r14
 2ae:	ff 92       	push	r15
 2b0:	0f 93       	push	r16
 2b2:	1f 93       	push	r17
 2b4:	cf 93       	push	r28
 2b6:	df 93       	push	r29
 2b8:	6b 01       	movw	r12, r22
 2ba:	7a 01       	movw	r14, r20
 2bc:	95 b1       	in	r25, 0x05	; 5
 2be:	9b 7f       	andi	r25, 0xFB	; 251
 2c0:	95 b9       	out	0x05, r25	; 5
 2c2:	0e 94 cc 03 	call	0x798	; 0x798 <spi_exchange>
 2c6:	b8 2e       	mov	r11, r24
 2c8:	c0 e0       	ldi	r28, 0x00	; 0
 2ca:	d0 e0       	ldi	r29, 0x00	; 0
 2cc:	0a c0       	rjmp	.+20     	; 0x2e2 <nrf24_send_spi+0x3c>
 2ce:	86 01       	movw	r16, r12
 2d0:	0c 0f       	add	r16, r28
 2d2:	1d 1f       	adc	r17, r29
 2d4:	f8 01       	movw	r30, r16
 2d6:	80 81       	ld	r24, Z
 2d8:	0e 94 cc 03 	call	0x798	; 0x798 <spi_exchange>
 2dc:	f8 01       	movw	r30, r16
 2de:	80 83       	st	Z, r24
 2e0:	21 96       	adiw	r28, 0x01	; 1
 2e2:	ce 15       	cp	r28, r14
 2e4:	df 05       	cpc	r29, r15
 2e6:	98 f3       	brcs	.-26     	; 0x2ce <nrf24_send_spi+0x28>
 2e8:	85 b1       	in	r24, 0x05	; 5
 2ea:	84 60       	ori	r24, 0x04	; 4
 2ec:	85 b9       	out	0x05, r24	; 5
 2ee:	8b 2d       	mov	r24, r11
 2f0:	df 91       	pop	r29
 2f2:	cf 91       	pop	r28
 2f4:	1f 91       	pop	r17
 2f6:	0f 91       	pop	r16
 2f8:	ff 90       	pop	r15
 2fa:	ef 90       	pop	r14
 2fc:	df 90       	pop	r13
 2fe:	cf 90       	pop	r12
 300:	bf 90       	pop	r11
 302:	08 95       	ret

00000304 <nrf24_write>:
 304:	80 62       	ori	r24, 0x20	; 32
 306:	0e 94 53 01 	call	0x2a6	; 0x2a6 <nrf24_send_spi>
 30a:	08 95       	ret

0000030c <nrf24_read>:
 30c:	0e 94 53 01 	call	0x2a6	; 0x2a6 <nrf24_send_spi>
 310:	08 95       	ret

00000312 <nrf24_init>:
 312:	0f 93       	push	r16
 314:	1f 93       	push	r17
 316:	cf 93       	push	r28
 318:	df 93       	push	r29
 31a:	1f 92       	push	r1
 31c:	cd b7       	in	r28, 0x3d	; 61
 31e:	de b7       	in	r29, 0x3e	; 62
 320:	f8 94       	cli
 322:	e9 e6       	ldi	r30, 0x69	; 105
 324:	f0 e0       	ldi	r31, 0x00	; 0
 326:	80 81       	ld	r24, Z
 328:	82 60       	ori	r24, 0x02	; 2
 32a:	80 83       	st	Z, r24
 32c:	8d b3       	in	r24, 0x1d	; 29
 32e:	81 60       	ori	r24, 0x01	; 1
 330:	8d bb       	out	0x1d, r24	; 29
 332:	78 94       	sei
 334:	84 b1       	in	r24, 0x04	; 4
 336:	82 60       	ori	r24, 0x02	; 2
 338:	84 b9       	out	0x04, r24	; 4
 33a:	84 b1       	in	r24, 0x04	; 4
 33c:	84 60       	ori	r24, 0x04	; 4
 33e:	84 b9       	out	0x04, r24	; 4
 340:	85 b1       	in	r24, 0x05	; 5
 342:	84 60       	ori	r24, 0x04	; 4
 344:	85 b9       	out	0x05, r24	; 5
 346:	85 b1       	in	r24, 0x05	; 5
 348:	8d 7f       	andi	r24, 0xFD	; 253
 34a:	85 b9       	out	0x05, r24	; 5
 34c:	0e 94 bb 03 	call	0x776	; 0x776 <spi_master_init>
 350:	2f ef       	ldi	r18, 0xFF	; 255
 352:	81 ee       	ldi	r24, 0xE1	; 225
 354:	94 e0       	ldi	r25, 0x04	; 4
 356:	21 50       	subi	r18, 0x01	; 1
 358:	80 40       	sbci	r24, 0x00	; 0
 35a:	90 40       	sbci	r25, 0x00	; 0
 35c:	e1 f7       	brne	.-8      	; 0x356 <nrf24_init+0x44>
 35e:	00 c0       	rjmp	.+0      	; 0x360 <nrf24_init+0x4e>
 360:	00 00       	nop
 362:	0f e3       	ldi	r16, 0x3F	; 63
 364:	00 93 a4 02 	sts	0x02A4, r16	; 0x8002a4 <data>
 368:	41 e0       	ldi	r20, 0x01	; 1
 36a:	50 e0       	ldi	r21, 0x00	; 0
 36c:	64 ea       	ldi	r22, 0xA4	; 164
 36e:	72 e0       	ldi	r23, 0x02	; 2
 370:	80 e0       	ldi	r24, 0x00	; 0
 372:	0e 94 82 01 	call	0x304	; 0x304 <nrf24_write>
 376:	10 92 a4 02 	sts	0x02A4, r1	; 0x8002a4 <data>
 37a:	41 e0       	ldi	r20, 0x01	; 1
 37c:	50 e0       	ldi	r21, 0x00	; 0
 37e:	64 ea       	ldi	r22, 0xA4	; 164
 380:	72 e0       	ldi	r23, 0x02	; 2
 382:	81 e0       	ldi	r24, 0x01	; 1
 384:	0e 94 82 01 	call	0x304	; 0x304 <nrf24_write>
 388:	80 ef       	ldi	r24, 0xF0	; 240
 38a:	80 93 a4 02 	sts	0x02A4, r24	; 0x8002a4 <data>
 38e:	41 e0       	ldi	r20, 0x01	; 1
 390:	50 e0       	ldi	r21, 0x00	; 0
 392:	64 ea       	ldi	r22, 0xA4	; 164
 394:	72 e0       	ldi	r23, 0x02	; 2
 396:	84 e0       	ldi	r24, 0x04	; 4
 398:	0e 94 82 01 	call	0x304	; 0x304 <nrf24_write>
 39c:	10 92 a4 02 	sts	0x02A4, r1	; 0x8002a4 <data>
 3a0:	41 e0       	ldi	r20, 0x01	; 1
 3a2:	50 e0       	ldi	r21, 0x00	; 0
 3a4:	64 ea       	ldi	r22, 0xA4	; 164
 3a6:	72 e0       	ldi	r23, 0x02	; 2
 3a8:	82 e0       	ldi	r24, 0x02	; 2
 3aa:	0e 94 82 01 	call	0x304	; 0x304 <nrf24_write>
 3ae:	84 e7       	ldi	r24, 0x74	; 116
 3b0:	80 93 a4 02 	sts	0x02A4, r24	; 0x8002a4 <data>
 3b4:	41 e0       	ldi	r20, 0x01	; 1
 3b6:	50 e0       	ldi	r21, 0x00	; 0
 3b8:	64 ea       	ldi	r22, 0xA4	; 164
 3ba:	72 e0       	ldi	r23, 0x02	; 2
 3bc:	85 e0       	ldi	r24, 0x05	; 5
 3be:	0e 94 82 01 	call	0x304	; 0x304 <nrf24_write>
 3c2:	8e e0       	ldi	r24, 0x0E	; 14
 3c4:	80 93 a4 02 	sts	0x02A4, r24	; 0x8002a4 <data>
 3c8:	41 e0       	ldi	r20, 0x01	; 1
 3ca:	50 e0       	ldi	r21, 0x00	; 0
 3cc:	64 ea       	ldi	r22, 0xA4	; 164
 3ce:	72 e0       	ldi	r23, 0x02	; 2
 3d0:	86 e0       	ldi	r24, 0x06	; 6
 3d2:	0e 94 82 01 	call	0x304	; 0x304 <nrf24_write>
 3d6:	10 e7       	ldi	r17, 0x70	; 112
 3d8:	10 93 a4 02 	sts	0x02A4, r17	; 0x8002a4 <data>
 3dc:	41 e0       	ldi	r20, 0x01	; 1
 3de:	50 e0       	ldi	r21, 0x00	; 0
 3e0:	64 ea       	ldi	r22, 0xA4	; 164
 3e2:	72 e0       	ldi	r23, 0x02	; 2
 3e4:	87 e0       	ldi	r24, 0x07	; 7
 3e6:	0e 94 82 01 	call	0x304	; 0x304 <nrf24_write>
 3ea:	00 93 a4 02 	sts	0x02A4, r16	; 0x8002a4 <data>
 3ee:	41 e0       	ldi	r20, 0x01	; 1
 3f0:	50 e0       	ldi	r21, 0x00	; 0
 3f2:	64 ea       	ldi	r22, 0xA4	; 164
 3f4:	72 e0       	ldi	r23, 0x02	; 2
 3f6:	8c e1       	ldi	r24, 0x1C	; 28
 3f8:	0e 94 82 01 	call	0x304	; 0x304 <nrf24_write>
 3fc:	84 e0       	ldi	r24, 0x04	; 4
 3fe:	80 93 a4 02 	sts	0x02A4, r24	; 0x8002a4 <data>
 402:	41 e0       	ldi	r20, 0x01	; 1
 404:	50 e0       	ldi	r21, 0x00	; 0
 406:	64 ea       	ldi	r22, 0xA4	; 164
 408:	72 e0       	ldi	r23, 0x02	; 2
 40a:	8d e1       	ldi	r24, 0x1D	; 29
 40c:	0e 94 82 01 	call	0x304	; 0x304 <nrf24_write>
 410:	19 83       	std	Y+1, r17	; 0x01
 412:	40 e0       	ldi	r20, 0x00	; 0
 414:	50 e0       	ldi	r21, 0x00	; 0
 416:	60 e0       	ldi	r22, 0x00	; 0
 418:	70 e0       	ldi	r23, 0x00	; 0
 41a:	82 ee       	ldi	r24, 0xE2	; 226
 41c:	0e 94 82 01 	call	0x304	; 0x304 <nrf24_write>
 420:	40 e0       	ldi	r20, 0x00	; 0
 422:	50 e0       	ldi	r21, 0x00	; 0
 424:	60 e0       	ldi	r22, 0x00	; 0
 426:	70 e0       	ldi	r23, 0x00	; 0
 428:	81 ee       	ldi	r24, 0xE1	; 225
 42a:	0e 94 82 01 	call	0x304	; 0x304 <nrf24_write>
 42e:	45 e0       	ldi	r20, 0x05	; 5
 430:	50 e0       	ldi	r21, 0x00	; 0
 432:	65 e0       	ldi	r22, 0x05	; 5
 434:	71 e0       	ldi	r23, 0x01	; 1
 436:	8a e0       	ldi	r24, 0x0A	; 10
 438:	0e 94 82 01 	call	0x304	; 0x304 <nrf24_write>
 43c:	45 e0       	ldi	r20, 0x05	; 5
 43e:	50 e0       	ldi	r21, 0x00	; 0
 440:	60 e0       	ldi	r22, 0x00	; 0
 442:	71 e0       	ldi	r23, 0x01	; 1
 444:	80 e1       	ldi	r24, 0x10	; 16
 446:	0e 94 82 01 	call	0x304	; 0x304 <nrf24_write>
 44a:	41 e0       	ldi	r20, 0x01	; 1
 44c:	50 e0       	ldi	r21, 0x00	; 0
 44e:	be 01       	movw	r22, r28
 450:	6f 5f       	subi	r22, 0xFF	; 255
 452:	7f 4f       	sbci	r23, 0xFF	; 255
 454:	82 e0       	ldi	r24, 0x02	; 2
 456:	0e 94 82 01 	call	0x304	; 0x304 <nrf24_write>
 45a:	89 81       	ldd	r24, Y+1	; 0x01
 45c:	81 60       	ori	r24, 0x01	; 1
 45e:	89 83       	std	Y+1, r24	; 0x01
 460:	41 e0       	ldi	r20, 0x01	; 1
 462:	50 e0       	ldi	r21, 0x00	; 0
 464:	be 01       	movw	r22, r28
 466:	6f 5f       	subi	r22, 0xFF	; 255
 468:	7f 4f       	sbci	r23, 0xFF	; 255
 46a:	82 e0       	ldi	r24, 0x02	; 2
 46c:	0e 94 82 01 	call	0x304	; 0x304 <nrf24_write>
 470:	0f 90       	pop	r0
 472:	df 91       	pop	r29
 474:	cf 91       	pop	r28
 476:	1f 91       	pop	r17
 478:	0f 91       	pop	r16
 47a:	08 95       	ret

0000047c <nrf24_state>:
 47c:	1f 93       	push	r17
 47e:	cf 93       	push	r28
 480:	df 93       	push	r29
 482:	1f 92       	push	r1
 484:	cd b7       	in	r28, 0x3d	; 61
 486:	de b7       	in	r29, 0x3e	; 62
 488:	18 2f       	mov	r17, r24
 48a:	41 e0       	ldi	r20, 0x01	; 1
 48c:	50 e0       	ldi	r21, 0x00	; 0
 48e:	be 01       	movw	r22, r28
 490:	6f 5f       	subi	r22, 0xFF	; 255
 492:	7f 4f       	sbci	r23, 0xFF	; 255
 494:	80 e0       	ldi	r24, 0x00	; 0
 496:	0e 94 86 01 	call	0x30c	; 0x30c <nrf24_read>
 49a:	13 30       	cpi	r17, 0x03	; 3
 49c:	71 f1       	breq	.+92     	; 0x4fa <nrf24_state+0x7e>
 49e:	28 f4       	brcc	.+10     	; 0x4aa <nrf24_state+0x2e>
 4a0:	11 30       	cpi	r17, 0x01	; 1
 4a2:	59 f0       	breq	.+22     	; 0x4ba <nrf24_state+0x3e>
 4a4:	12 30       	cpi	r17, 0x02	; 2
 4a6:	e9 f0       	breq	.+58     	; 0x4e2 <nrf24_state+0x66>
 4a8:	62 c0       	rjmp	.+196    	; 0x56e <nrf24_state+0xf2>
 4aa:	15 30       	cpi	r17, 0x05	; 5
 4ac:	09 f4       	brne	.+2      	; 0x4b0 <nrf24_state+0x34>
 4ae:	47 c0       	rjmp	.+142    	; 0x53e <nrf24_state+0xc2>
 4b0:	d0 f1       	brcs	.+116    	; 0x526 <nrf24_state+0xaa>
 4b2:	16 30       	cpi	r17, 0x06	; 6
 4b4:	09 f4       	brne	.+2      	; 0x4b8 <nrf24_state+0x3c>
 4b6:	47 c0       	rjmp	.+142    	; 0x546 <nrf24_state+0xca>
 4b8:	5a c0       	rjmp	.+180    	; 0x56e <nrf24_state+0xf2>
 4ba:	89 81       	ldd	r24, Y+1	; 0x01
 4bc:	81 fd       	sbrc	r24, 1
 4be:	57 c0       	rjmp	.+174    	; 0x56e <nrf24_state+0xf2>
 4c0:	82 60       	ori	r24, 0x02	; 2
 4c2:	80 93 a4 02 	sts	0x02A4, r24	; 0x8002a4 <data>
 4c6:	41 e0       	ldi	r20, 0x01	; 1
 4c8:	50 e0       	ldi	r21, 0x00	; 0
 4ca:	64 ea       	ldi	r22, 0xA4	; 164
 4cc:	72 e0       	ldi	r23, 0x02	; 2
 4ce:	80 e0       	ldi	r24, 0x00	; 0
 4d0:	0e 94 82 01 	call	0x304	; 0x304 <nrf24_write>
 4d4:	8f e3       	ldi	r24, 0x3F	; 63
 4d6:	9f e1       	ldi	r25, 0x1F	; 31
 4d8:	01 97       	sbiw	r24, 0x01	; 1
 4da:	f1 f7       	brne	.-4      	; 0x4d8 <nrf24_state+0x5c>
 4dc:	00 c0       	rjmp	.+0      	; 0x4de <nrf24_state+0x62>
 4de:	00 00       	nop
 4e0:	46 c0       	rjmp	.+140    	; 0x56e <nrf24_state+0xf2>
 4e2:	89 81       	ldd	r24, Y+1	; 0x01
 4e4:	8d 7f       	andi	r24, 0xFD	; 253
 4e6:	80 93 a4 02 	sts	0x02A4, r24	; 0x8002a4 <data>
 4ea:	41 e0       	ldi	r20, 0x01	; 1
 4ec:	50 e0       	ldi	r21, 0x00	; 0
 4ee:	64 ea       	ldi	r22, 0xA4	; 164
 4f0:	72 e0       	ldi	r23, 0x02	; 2
 4f2:	80 e0       	ldi	r24, 0x00	; 0
 4f4:	0e 94 82 01 	call	0x304	; 0x304 <nrf24_write>
 4f8:	3a c0       	rjmp	.+116    	; 0x56e <nrf24_state+0xf2>
 4fa:	89 81       	ldd	r24, Y+1	; 0x01
 4fc:	81 60       	ori	r24, 0x01	; 1
 4fe:	80 93 a4 02 	sts	0x02A4, r24	; 0x8002a4 <data>
 502:	41 e0       	ldi	r20, 0x01	; 1
 504:	50 e0       	ldi	r21, 0x00	; 0
 506:	64 ea       	ldi	r22, 0xA4	; 164
 508:	72 e0       	ldi	r23, 0x02	; 2
 50a:	80 e0       	ldi	r24, 0x00	; 0
 50c:	0e 94 82 01 	call	0x304	; 0x304 <nrf24_write>
 510:	80 e7       	ldi	r24, 0x70	; 112
 512:	80 93 a4 02 	sts	0x02A4, r24	; 0x8002a4 <data>
 516:	41 e0       	ldi	r20, 0x01	; 1
 518:	50 e0       	ldi	r21, 0x00	; 0
 51a:	64 ea       	ldi	r22, 0xA4	; 164
 51c:	72 e0       	ldi	r23, 0x02	; 2
 51e:	87 e0       	ldi	r24, 0x07	; 7
 520:	0e 94 82 01 	call	0x304	; 0x304 <nrf24_write>
 524:	24 c0       	rjmp	.+72     	; 0x56e <nrf24_state+0xf2>
 526:	89 81       	ldd	r24, Y+1	; 0x01
 528:	8e 7f       	andi	r24, 0xFE	; 254
 52a:	80 93 a4 02 	sts	0x02A4, r24	; 0x8002a4 <data>
 52e:	41 e0       	ldi	r20, 0x01	; 1
 530:	50 e0       	ldi	r21, 0x00	; 0
 532:	64 ea       	ldi	r22, 0xA4	; 164
 534:	72 e0       	ldi	r23, 0x02	; 2
 536:	80 e0       	ldi	r24, 0x00	; 0
 538:	0e 94 82 01 	call	0x304	; 0x304 <nrf24_write>
 53c:	18 c0       	rjmp	.+48     	; 0x56e <nrf24_state+0xf2>
 53e:	85 b1       	in	r24, 0x05	; 5
 540:	8d 7f       	andi	r24, 0xFD	; 253
 542:	85 b9       	out	0x05, r24	; 5
 544:	14 c0       	rjmp	.+40     	; 0x56e <nrf24_state+0xf2>
 546:	89 81       	ldd	r24, Y+1	; 0x01
 548:	8e 7f       	andi	r24, 0xFE	; 254
 54a:	80 93 a4 02 	sts	0x02A4, r24	; 0x8002a4 <data>
 54e:	41 e0       	ldi	r20, 0x01	; 1
 550:	50 e0       	ldi	r21, 0x00	; 0
 552:	64 ea       	ldi	r22, 0xA4	; 164
 554:	72 e0       	ldi	r23, 0x02	; 2
 556:	80 e0       	ldi	r24, 0x00	; 0
 558:	0e 94 82 01 	call	0x304	; 0x304 <nrf24_write>
 55c:	85 b1       	in	r24, 0x05	; 5
 55e:	82 60       	ori	r24, 0x02	; 2
 560:	85 b9       	out	0x05, r24	; 5
 562:	87 e5       	ldi	r24, 0x57	; 87
 564:	92 e0       	ldi	r25, 0x02	; 2
 566:	01 97       	sbiw	r24, 0x01	; 1
 568:	f1 f7       	brne	.-4      	; 0x566 <nrf24_state+0xea>
 56a:	00 c0       	rjmp	.+0      	; 0x56c <nrf24_state+0xf0>
 56c:	00 00       	nop
 56e:	0f 90       	pop	r0
 570:	df 91       	pop	r29
 572:	cf 91       	pop	r28
 574:	1f 91       	pop	r17
 576:	08 95       	ret

00000578 <nrf24_start_listening>:
 578:	83 e0       	ldi	r24, 0x03	; 3
 57a:	0e 94 3e 02 	call	0x47c	; 0x47c <nrf24_state>
 57e:	85 b1       	in	r24, 0x05	; 5
 580:	82 60       	ori	r24, 0x02	; 2
 582:	85 b9       	out	0x05, r24	; 5
 584:	87 e5       	ldi	r24, 0x57	; 87
 586:	92 e0       	ldi	r25, 0x02	; 2
 588:	01 97       	sbiw	r24, 0x01	; 1
 58a:	f1 f7       	brne	.-4      	; 0x588 <nrf24_start_listening+0x10>
 58c:	00 c0       	rjmp	.+0      	; 0x58e <nrf24_start_listening+0x16>
 58e:	00 00       	nop
 590:	08 95       	ret

00000592 <nrf24_send_message>:
 592:	cf 92       	push	r12
 594:	df 92       	push	r13
 596:	ef 92       	push	r14
 598:	ff 92       	push	r15
 59a:	0f 93       	push	r16
 59c:	1f 93       	push	r17
 59e:	cf 93       	push	r28
 5a0:	df 93       	push	r29
 5a2:	cd b7       	in	r28, 0x3d	; 61
 5a4:	de b7       	in	r29, 0x3e	; 62
 5a6:	a0 97       	sbiw	r28, 0x20	; 32
 5a8:	0f b6       	in	r0, 0x3f	; 63
 5aa:	f8 94       	cli
 5ac:	de bf       	out	0x3e, r29	; 62
 5ae:	0f be       	out	0x3f, r0	; 63
 5b0:	cd bf       	out	0x3d, r28	; 61
 5b2:	7c 01       	movw	r14, r24
 5b4:	00 e2       	ldi	r16, 0x20	; 32
 5b6:	ce 01       	movw	r24, r28
 5b8:	01 96       	adiw	r24, 0x01	; 1
 5ba:	fc 01       	movw	r30, r24
 5bc:	20 2f       	mov	r18, r16
 5be:	11 92       	st	Z+, r1
 5c0:	2a 95       	dec	r18
 5c2:	e9 f7       	brne	.-6      	; 0x5be <nrf24_send_message+0x2c>
 5c4:	b7 01       	movw	r22, r14
 5c6:	0e 94 fe 03 	call	0x7fc	; 0x7fc <strcpy>
 5ca:	f7 01       	movw	r30, r14
 5cc:	01 90       	ld	r0, Z+
 5ce:	00 20       	and	r0, r0
 5d0:	e9 f7       	brne	.-6      	; 0x5cc <nrf24_send_message+0x3a>
 5d2:	31 97       	sbiw	r30, 0x01	; 1
 5d4:	1e 2f       	mov	r17, r30
 5d6:	1e 19       	sub	r17, r14
 5d8:	84 e0       	ldi	r24, 0x04	; 4
 5da:	0e 94 3e 02 	call	0x47c	; 0x47c <nrf24_state>
 5de:	40 e0       	ldi	r20, 0x00	; 0
 5e0:	50 e0       	ldi	r21, 0x00	; 0
 5e2:	60 e0       	ldi	r22, 0x00	; 0
 5e4:	70 e0       	ldi	r23, 0x00	; 0
 5e6:	82 ee       	ldi	r24, 0xE2	; 226
 5e8:	0e 94 82 01 	call	0x304	; 0x304 <nrf24_write>
 5ec:	40 e0       	ldi	r20, 0x00	; 0
 5ee:	50 e0       	ldi	r21, 0x00	; 0
 5f0:	60 e0       	ldi	r22, 0x00	; 0
 5f2:	70 e0       	ldi	r23, 0x00	; 0
 5f4:	81 ee       	ldi	r24, 0xE1	; 225
 5f6:	0e 94 82 01 	call	0x304	; 0x304 <nrf24_write>
 5fa:	00 93 a4 02 	sts	0x02A4, r16	; 0x8002a4 <data>
 5fe:	41 e0       	ldi	r20, 0x01	; 1
 600:	50 e0       	ldi	r21, 0x00	; 0
 602:	64 ea       	ldi	r22, 0xA4	; 164
 604:	72 e0       	ldi	r23, 0x02	; 2
 606:	87 e0       	ldi	r24, 0x07	; 7
 608:	0e 94 82 01 	call	0x304	; 0x304 <nrf24_write>
 60c:	41 e0       	ldi	r20, 0x01	; 1
 60e:	50 e0       	ldi	r21, 0x00	; 0
 610:	64 ea       	ldi	r22, 0xA4	; 164
 612:	72 e0       	ldi	r23, 0x02	; 2
 614:	80 e0       	ldi	r24, 0x00	; 0
 616:	0e 94 86 01 	call	0x30c	; 0x30c <nrf24_read>
 61a:	80 91 a4 02 	lds	r24, 0x02A4	; 0x8002a4 <data>
 61e:	80 64       	ori	r24, 0x40	; 64
 620:	80 93 a4 02 	sts	0x02A4, r24	; 0x8002a4 <data>
 624:	41 e0       	ldi	r20, 0x01	; 1
 626:	50 e0       	ldi	r21, 0x00	; 0
 628:	64 ea       	ldi	r22, 0xA4	; 164
 62a:	72 e0       	ldi	r23, 0x02	; 2
 62c:	80 e0       	ldi	r24, 0x00	; 0
 62e:	0e 94 82 01 	call	0x304	; 0x304 <nrf24_write>
 632:	85 b1       	in	r24, 0x05	; 5
 634:	8b 7f       	andi	r24, 0xFB	; 251
 636:	85 b9       	out	0x05, r24	; 5
 638:	80 eb       	ldi	r24, 0xB0	; 176
 63a:	0e 94 c7 03 	call	0x78e	; 0x78e <spi_send>
 63e:	0a c0       	rjmp	.+20     	; 0x654 <nrf24_send_message+0xc2>
 640:	67 01       	movw	r12, r14
 642:	8f ef       	ldi	r24, 0xFF	; 255
 644:	c8 1a       	sub	r12, r24
 646:	d8 0a       	sbc	r13, r24
 648:	f7 01       	movw	r30, r14
 64a:	80 81       	ld	r24, Z
 64c:	0e 94 c7 03 	call	0x78e	; 0x78e <spi_send>
 650:	10 2f       	mov	r17, r16
 652:	76 01       	movw	r14, r12
 654:	0f ef       	ldi	r16, 0xFF	; 255
 656:	01 0f       	add	r16, r17
 658:	11 11       	cpse	r17, r1
 65a:	f2 cf       	rjmp	.-28     	; 0x640 <nrf24_send_message+0xae>
 65c:	80 e0       	ldi	r24, 0x00	; 0
 65e:	0e 94 c7 03 	call	0x78e	; 0x78e <spi_send>
 662:	85 b1       	in	r24, 0x05	; 5
 664:	84 60       	ori	r24, 0x04	; 4
 666:	85 b9       	out	0x05, r24	; 5
 668:	85 b1       	in	r24, 0x05	; 5
 66a:	82 60       	ori	r24, 0x02	; 2
 66c:	85 b9       	out	0x05, r24	; 5
 66e:	f0 e5       	ldi	r31, 0x50	; 80
 670:	fa 95       	dec	r31
 672:	f1 f7       	brne	.-4      	; 0x670 <nrf24_send_message+0xde>
 674:	85 b1       	in	r24, 0x05	; 5
 676:	8d 7f       	andi	r24, 0xFD	; 253
 678:	85 b9       	out	0x05, r24	; 5
 67a:	41 e0       	ldi	r20, 0x01	; 1
 67c:	50 e0       	ldi	r21, 0x00	; 0
 67e:	64 ea       	ldi	r22, 0xA4	; 164
 680:	72 e0       	ldi	r23, 0x02	; 2
 682:	87 e0       	ldi	r24, 0x07	; 7
 684:	0e 94 86 01 	call	0x30c	; 0x30c <nrf24_read>
 688:	07 c0       	rjmp	.+14     	; 0x698 <nrf24_send_message+0x106>
 68a:	41 e0       	ldi	r20, 0x01	; 1
 68c:	50 e0       	ldi	r21, 0x00	; 0
 68e:	64 ea       	ldi	r22, 0xA4	; 164
 690:	72 e0       	ldi	r23, 0x02	; 2
 692:	87 e0       	ldi	r24, 0x07	; 7
 694:	0e 94 86 01 	call	0x30c	; 0x30c <nrf24_read>
 698:	80 91 a4 02 	lds	r24, 0x02A4	; 0x8002a4 <data>
 69c:	85 ff       	sbrs	r24, 5
 69e:	f5 cf       	rjmp	.-22     	; 0x68a <nrf24_send_message+0xf8>
 6a0:	ce 01       	movw	r24, r28
 6a2:	01 96       	adiw	r24, 0x01	; 1
 6a4:	9f 93       	push	r25
 6a6:	8f 93       	push	r24
 6a8:	89 e6       	ldi	r24, 0x69	; 105
 6aa:	92 e0       	ldi	r25, 0x02	; 2
 6ac:	9f 93       	push	r25
 6ae:	8f 93       	push	r24
 6b0:	0e 94 05 04 	call	0x80a	; 0x80a <printf>
 6b4:	41 e0       	ldi	r20, 0x01	; 1
 6b6:	50 e0       	ldi	r21, 0x00	; 0
 6b8:	64 ea       	ldi	r22, 0xA4	; 164
 6ba:	72 e0       	ldi	r23, 0x02	; 2
 6bc:	80 e0       	ldi	r24, 0x00	; 0
 6be:	0e 94 86 01 	call	0x30c	; 0x30c <nrf24_read>
 6c2:	80 91 a4 02 	lds	r24, 0x02A4	; 0x8002a4 <data>
 6c6:	8f 7b       	andi	r24, 0xBF	; 191
 6c8:	80 93 a4 02 	sts	0x02A4, r24	; 0x8002a4 <data>
 6cc:	41 e0       	ldi	r20, 0x01	; 1
 6ce:	50 e0       	ldi	r21, 0x00	; 0
 6d0:	64 ea       	ldi	r22, 0xA4	; 164
 6d2:	72 e0       	ldi	r23, 0x02	; 2
 6d4:	80 e0       	ldi	r24, 0x00	; 0
 6d6:	0e 94 82 01 	call	0x304	; 0x304 <nrf24_write>
 6da:	0e 94 bc 02 	call	0x578	; 0x578 <nrf24_start_listening>
 6de:	0f 90       	pop	r0
 6e0:	0f 90       	pop	r0
 6e2:	0f 90       	pop	r0
 6e4:	0f 90       	pop	r0
 6e6:	81 e0       	ldi	r24, 0x01	; 1
 6e8:	a0 96       	adiw	r28, 0x20	; 32
 6ea:	0f b6       	in	r0, 0x3f	; 63
 6ec:	f8 94       	cli
 6ee:	de bf       	out	0x3e, r29	; 62
 6f0:	0f be       	out	0x3f, r0	; 63
 6f2:	cd bf       	out	0x3d, r28	; 61
 6f4:	df 91       	pop	r29
 6f6:	cf 91       	pop	r28
 6f8:	1f 91       	pop	r17
 6fa:	0f 91       	pop	r16
 6fc:	ff 90       	pop	r15
 6fe:	ef 90       	pop	r14
 700:	df 90       	pop	r13
 702:	cf 90       	pop	r12
 704:	08 95       	ret

00000706 <nrf24_read_message>:

const char * nrf24_read_message(void)
{
	// Message placeholder
	static char rx_message[32];
	memset(rx_message,0,32);
 706:	80 e2       	ldi	r24, 0x20	; 32
 708:	e4 e8       	ldi	r30, 0x84	; 132
 70a:	f2 e0       	ldi	r31, 0x02	; 2
 70c:	df 01       	movw	r26, r30
 70e:	1d 92       	st	X+, r1
 710:	8a 95       	dec	r24
 712:	e9 f7       	brne	.-6      	; 0x70e <nrf24_read_message+0x8>
	
	// Write ACK message
	if (AUTO_ACK) nrf24_write_ack();
	
	// Get length of incoming message
	nrf24_read(R_RX_PL_WID,&data,1);
 714:	41 e0       	ldi	r20, 0x01	; 1
 716:	50 e0       	ldi	r21, 0x00	; 0
 718:	64 ea       	ldi	r22, 0xA4	; 164
 71a:	72 e0       	ldi	r23, 0x02	; 2
 71c:	80 e6       	ldi	r24, 0x60	; 96
 71e:	0e 94 86 01 	call	0x30c	; 0x30c <nrf24_read>
	
	// Read message
	if (data > 0) nrf24_send_spi(R_RX_PAYLOAD,&rx_message,data+1);
 722:	40 91 a4 02 	lds	r20, 0x02A4	; 0x8002a4 <data>
 726:	44 23       	and	r20, r20
 728:	41 f0       	breq	.+16     	; 0x73a <nrf24_read_message+0x34>
 72a:	50 e0       	ldi	r21, 0x00	; 0
 72c:	4f 5f       	subi	r20, 0xFF	; 255
 72e:	5f 4f       	sbci	r21, 0xFF	; 255
 730:	64 e8       	ldi	r22, 0x84	; 132
 732:	72 e0       	ldi	r23, 0x02	; 2
 734:	81 e6       	ldi	r24, 0x61	; 97
 736:	0e 94 53 01 	call	0x2a6	; 0x2a6 <nrf24_send_spi>

	// Check if there is message in array
	if (strlen(rx_message) > 0)
 73a:	80 91 84 02 	lds	r24, 0x0284	; 0x800284 <rx_message.2167>
 73e:	88 23       	and	r24, r24
 740:	69 f0       	breq	.+26     	; 0x75c <nrf24_read_message+0x56>
	{
		// Clear RX interrupt
		data = (1 << RX_DR);
 742:	80 e4       	ldi	r24, 0x40	; 64
 744:	80 93 a4 02 	sts	0x02A4, r24	; 0x8002a4 <data>
		nrf24_write(STATUS,&data,1);
 748:	41 e0       	ldi	r20, 0x01	; 1
 74a:	50 e0       	ldi	r21, 0x00	; 0
 74c:	64 ea       	ldi	r22, 0xA4	; 164
 74e:	72 e0       	ldi	r23, 0x02	; 2
 750:	87 e0       	ldi	r24, 0x07	; 7
 752:	0e 94 82 01 	call	0x304	; 0x304 <nrf24_write>
		
		return rx_message;
 756:	84 e8       	ldi	r24, 0x84	; 132
 758:	92 e0       	ldi	r25, 0x02	; 2
 75a:	08 95       	ret
	}
	
	// Clear RX interrupt
	data = (1 << RX_DR);
 75c:	80 e4       	ldi	r24, 0x40	; 64
 75e:	80 93 a4 02 	sts	0x02A4, r24	; 0x8002a4 <data>
	nrf24_write(STATUS,&data,1);
 762:	41 e0       	ldi	r20, 0x01	; 1
 764:	50 e0       	ldi	r21, 0x00	; 0
 766:	64 ea       	ldi	r22, 0xA4	; 164
 768:	72 e0       	ldi	r23, 0x02	; 2
 76a:	87 e0       	ldi	r24, 0x07	; 7
 76c:	0e 94 82 01 	call	0x304	; 0x304 <nrf24_write>
	
	return "failed";
 770:	8b e7       	ldi	r24, 0x7B	; 123
 772:	92 e0       	ldi	r25, 0x02	; 2
}
 774:	08 95       	ret

00000776 <spi_master_init>:
	while ( count-- ) {
		SPDR = *send_buffer++;
		loop_until_bit_is_set(SPSR, SPIF);
		*receive_buffer++ = SPDR;
	}
}
 776:	84 b1       	in	r24, 0x04	; 4
 778:	8f 7e       	andi	r24, 0xEF	; 239
 77a:	84 b9       	out	0x04, r24	; 4
 77c:	84 b1       	in	r24, 0x04	; 4
 77e:	88 62       	ori	r24, 0x28	; 40
 780:	84 b9       	out	0x04, r24	; 4
 782:	80 e5       	ldi	r24, 0x50	; 80
 784:	8c bd       	out	0x2c, r24	; 44
 786:	8d b5       	in	r24, 0x2d	; 45
 788:	81 60       	ori	r24, 0x01	; 1
 78a:	8d bd       	out	0x2d, r24	; 45
 78c:	08 95       	ret

0000078e <spi_send>:
 78e:	8e bd       	out	0x2e, r24	; 46
 790:	0d b4       	in	r0, 0x2d	; 45
 792:	07 fe       	sbrs	r0, 7
 794:	fd cf       	rjmp	.-6      	; 0x790 <spi_send+0x2>
 796:	08 95       	ret

00000798 <spi_exchange>:

uint8_t spi_exchange( uint8_t send_data )
{
	SPDR = send_data;
 798:	8e bd       	out	0x2e, r24	; 46
	loop_until_bit_is_set(SPSR, SPIF);
 79a:	0d b4       	in	r0, 0x2d	; 45
 79c:	07 fe       	sbrs	r0, 7
 79e:	fd cf       	rjmp	.-6      	; 0x79a <spi_exchange+0x2>
	return SPDR;
 7a0:	8e b5       	in	r24, 0x2e	; 46
}
 7a2:	08 95       	ret

000007a4 <uart_putchar>:
    stdout = &mystdout;
    stdin  = &mystdin; 
}

// Redirect stdout to UART
int uart_putchar(char c, FILE *stream) {
 7a4:	cf 93       	push	r28
 7a6:	c8 2f       	mov	r28, r24
	if (c == '\n') {
 7a8:	8a 30       	cpi	r24, 0x0A	; 10
 7aa:	19 f4       	brne	.+6      	; 0x7b2 <uart_putchar+0xe>
		uart_putchar('\r', stream);
 7ac:	8d e0       	ldi	r24, 0x0D	; 13
 7ae:	0e 94 d2 03 	call	0x7a4	; 0x7a4 <uart_putchar>
	}
	loop_until_bit_is_set(UCSR0A, UDRE0);
 7b2:	80 91 c0 00 	lds	r24, 0x00C0	; 0x8000c0 <__TEXT_REGION_LENGTH__+0x7f80c0>
 7b6:	85 ff       	sbrs	r24, 5
 7b8:	fc cf       	rjmp	.-8      	; 0x7b2 <uart_putchar+0xe>
	UDR0 = c;
 7ba:	c0 93 c6 00 	sts	0x00C6, r28	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7f80c6>
	return 0;
}
 7be:	80 e0       	ldi	r24, 0x00	; 0
 7c0:	90 e0       	ldi	r25, 0x00	; 0
 7c2:	cf 91       	pop	r28
 7c4:	08 95       	ret

000007c6 <uart_getchar>:

// Redirect stdin to UART
int uart_getchar(FILE *stream) {
	loop_until_bit_is_set(UCSR0A, RXC0);
 7c6:	80 91 c0 00 	lds	r24, 0x00C0	; 0x8000c0 <__TEXT_REGION_LENGTH__+0x7f80c0>
 7ca:	88 23       	and	r24, r24
 7cc:	e4 f7       	brge	.-8      	; 0x7c6 <uart_getchar>
	return UDR0;
 7ce:	80 91 c6 00 	lds	r24, 0x00C6	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7f80c6>
}
 7d2:	90 e0       	ldi	r25, 0x00	; 0
 7d4:	08 95       	ret

000007d6 <uart_init>:
static FILE mystdout = FDEV_SETUP_STREAM(uart_putchar, NULL, _FDEV_SETUP_WRITE); 
static FILE mystdin = FDEV_SETUP_STREAM(NULL, uart_getchar, _FDEV_SETUP_READ);

void uart_init(void)
{
    UBRR0H = MYUBRR >> 8;
 7d6:	10 92 c5 00 	sts	0x00C5, r1	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7f80c5>
    UBRR0L = MYUBRR;
 7da:	87 e6       	ldi	r24, 0x67	; 103
 7dc:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7f80c4>
    UCSR0B = (1<<RXEN0)|(1<<TXEN0);
 7e0:	88 e1       	ldi	r24, 0x18	; 24
 7e2:	80 93 c1 00 	sts	0x00C1, r24	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7f80c1>
    
    stdout = &mystdout;
 7e6:	e5 ea       	ldi	r30, 0xA5	; 165
 7e8:	f2 e0       	ldi	r31, 0x02	; 2
 7ea:	88 e1       	ldi	r24, 0x18	; 24
 7ec:	91 e0       	ldi	r25, 0x01	; 1
 7ee:	93 83       	std	Z+3, r25	; 0x03
 7f0:	82 83       	std	Z+2, r24	; 0x02
    stdin  = &mystdin; 
 7f2:	8a e0       	ldi	r24, 0x0A	; 10
 7f4:	91 e0       	ldi	r25, 0x01	; 1
 7f6:	91 83       	std	Z+1, r25	; 0x01
 7f8:	80 83       	st	Z, r24
 7fa:	08 95       	ret

000007fc <strcpy>:
 7fc:	fb 01       	movw	r30, r22
 7fe:	dc 01       	movw	r26, r24
 800:	01 90       	ld	r0, Z+
 802:	0d 92       	st	X+, r0
 804:	00 20       	and	r0, r0
 806:	e1 f7       	brne	.-8      	; 0x800 <__DATA_REGION_LENGTH__>
 808:	08 95       	ret

0000080a <printf>:
 80a:	a0 e0       	ldi	r26, 0x00	; 0
 80c:	b0 e0       	ldi	r27, 0x00	; 0
 80e:	eb e0       	ldi	r30, 0x0B	; 11
 810:	f4 e0       	ldi	r31, 0x04	; 4
 812:	0c 94 ec 06 	jmp	0xdd8	; 0xdd8 <__prologue_saves__+0x20>
 816:	ae 01       	movw	r20, r28
 818:	4b 5f       	subi	r20, 0xFB	; 251
 81a:	5f 4f       	sbci	r21, 0xFF	; 255
 81c:	fa 01       	movw	r30, r20
 81e:	61 91       	ld	r22, Z+
 820:	71 91       	ld	r23, Z+
 822:	af 01       	movw	r20, r30
 824:	80 91 a7 02 	lds	r24, 0x02A7	; 0x8002a7 <__iob+0x2>
 828:	90 91 a8 02 	lds	r25, 0x02A8	; 0x8002a8 <__iob+0x3>
 82c:	0e 94 4b 04 	call	0x896	; 0x896 <vfprintf>
 830:	e2 e0       	ldi	r30, 0x02	; 2
 832:	0c 94 08 07 	jmp	0xe10	; 0xe10 <__epilogue_restores__+0x20>

00000836 <puts>:
 836:	0f 93       	push	r16
 838:	1f 93       	push	r17
 83a:	cf 93       	push	r28
 83c:	df 93       	push	r29
 83e:	e0 91 a7 02 	lds	r30, 0x02A7	; 0x8002a7 <__iob+0x2>
 842:	f0 91 a8 02 	lds	r31, 0x02A8	; 0x8002a8 <__iob+0x3>
 846:	23 81       	ldd	r18, Z+3	; 0x03
 848:	21 ff       	sbrs	r18, 1
 84a:	1b c0       	rjmp	.+54     	; 0x882 <puts+0x4c>
 84c:	8c 01       	movw	r16, r24
 84e:	d0 e0       	ldi	r29, 0x00	; 0
 850:	c0 e0       	ldi	r28, 0x00	; 0
 852:	f8 01       	movw	r30, r16
 854:	81 91       	ld	r24, Z+
 856:	8f 01       	movw	r16, r30
 858:	60 91 a7 02 	lds	r22, 0x02A7	; 0x8002a7 <__iob+0x2>
 85c:	70 91 a8 02 	lds	r23, 0x02A8	; 0x8002a8 <__iob+0x3>
 860:	db 01       	movw	r26, r22
 862:	18 96       	adiw	r26, 0x08	; 8
 864:	ed 91       	ld	r30, X+
 866:	fc 91       	ld	r31, X
 868:	19 97       	sbiw	r26, 0x09	; 9
 86a:	88 23       	and	r24, r24
 86c:	31 f0       	breq	.+12     	; 0x87a <puts+0x44>
 86e:	09 95       	icall
 870:	89 2b       	or	r24, r25
 872:	79 f3       	breq	.-34     	; 0x852 <puts+0x1c>
 874:	df ef       	ldi	r29, 0xFF	; 255
 876:	cf ef       	ldi	r28, 0xFF	; 255
 878:	ec cf       	rjmp	.-40     	; 0x852 <puts+0x1c>
 87a:	8a e0       	ldi	r24, 0x0A	; 10
 87c:	09 95       	icall
 87e:	89 2b       	or	r24, r25
 880:	19 f0       	breq	.+6      	; 0x888 <puts+0x52>
 882:	8f ef       	ldi	r24, 0xFF	; 255
 884:	9f ef       	ldi	r25, 0xFF	; 255
 886:	02 c0       	rjmp	.+4      	; 0x88c <puts+0x56>
 888:	8d 2f       	mov	r24, r29
 88a:	9c 2f       	mov	r25, r28
 88c:	df 91       	pop	r29
 88e:	cf 91       	pop	r28
 890:	1f 91       	pop	r17
 892:	0f 91       	pop	r16
 894:	08 95       	ret

00000896 <vfprintf>:
 896:	ab e0       	ldi	r26, 0x0B	; 11
 898:	b0 e0       	ldi	r27, 0x00	; 0
 89a:	e1 e5       	ldi	r30, 0x51	; 81
 89c:	f4 e0       	ldi	r31, 0x04	; 4
 89e:	0c 94 dc 06 	jmp	0xdb8	; 0xdb8 <__prologue_saves__>
 8a2:	6c 01       	movw	r12, r24
 8a4:	7b 01       	movw	r14, r22
 8a6:	8a 01       	movw	r16, r20
 8a8:	fc 01       	movw	r30, r24
 8aa:	17 82       	std	Z+7, r1	; 0x07
 8ac:	16 82       	std	Z+6, r1	; 0x06
 8ae:	83 81       	ldd	r24, Z+3	; 0x03
 8b0:	81 ff       	sbrs	r24, 1
 8b2:	cc c1       	rjmp	.+920    	; 0xc4c <__stack+0x34d>
 8b4:	ce 01       	movw	r24, r28
 8b6:	01 96       	adiw	r24, 0x01	; 1
 8b8:	3c 01       	movw	r6, r24
 8ba:	f6 01       	movw	r30, r12
 8bc:	93 81       	ldd	r25, Z+3	; 0x03
 8be:	f7 01       	movw	r30, r14
 8c0:	93 fd       	sbrc	r25, 3
 8c2:	85 91       	lpm	r24, Z+
 8c4:	93 ff       	sbrs	r25, 3
 8c6:	81 91       	ld	r24, Z+
 8c8:	7f 01       	movw	r14, r30
 8ca:	88 23       	and	r24, r24
 8cc:	09 f4       	brne	.+2      	; 0x8d0 <vfprintf+0x3a>
 8ce:	ba c1       	rjmp	.+884    	; 0xc44 <__stack+0x345>
 8d0:	85 32       	cpi	r24, 0x25	; 37
 8d2:	39 f4       	brne	.+14     	; 0x8e2 <vfprintf+0x4c>
 8d4:	93 fd       	sbrc	r25, 3
 8d6:	85 91       	lpm	r24, Z+
 8d8:	93 ff       	sbrs	r25, 3
 8da:	81 91       	ld	r24, Z+
 8dc:	7f 01       	movw	r14, r30
 8de:	85 32       	cpi	r24, 0x25	; 37
 8e0:	29 f4       	brne	.+10     	; 0x8ec <vfprintf+0x56>
 8e2:	b6 01       	movw	r22, r12
 8e4:	90 e0       	ldi	r25, 0x00	; 0
 8e6:	0e 94 42 06 	call	0xc84	; 0xc84 <fputc>
 8ea:	e7 cf       	rjmp	.-50     	; 0x8ba <vfprintf+0x24>
 8ec:	91 2c       	mov	r9, r1
 8ee:	21 2c       	mov	r2, r1
 8f0:	31 2c       	mov	r3, r1
 8f2:	ff e1       	ldi	r31, 0x1F	; 31
 8f4:	f3 15       	cp	r31, r3
 8f6:	d8 f0       	brcs	.+54     	; 0x92e <__stack+0x2f>
 8f8:	8b 32       	cpi	r24, 0x2B	; 43
 8fa:	79 f0       	breq	.+30     	; 0x91a <__stack+0x1b>
 8fc:	38 f4       	brcc	.+14     	; 0x90c <__stack+0xd>
 8fe:	80 32       	cpi	r24, 0x20	; 32
 900:	79 f0       	breq	.+30     	; 0x920 <__stack+0x21>
 902:	83 32       	cpi	r24, 0x23	; 35
 904:	a1 f4       	brne	.+40     	; 0x92e <__stack+0x2f>
 906:	23 2d       	mov	r18, r3
 908:	20 61       	ori	r18, 0x10	; 16
 90a:	1d c0       	rjmp	.+58     	; 0x946 <__stack+0x47>
 90c:	8d 32       	cpi	r24, 0x2D	; 45
 90e:	61 f0       	breq	.+24     	; 0x928 <__stack+0x29>
 910:	80 33       	cpi	r24, 0x30	; 48
 912:	69 f4       	brne	.+26     	; 0x92e <__stack+0x2f>
 914:	23 2d       	mov	r18, r3
 916:	21 60       	ori	r18, 0x01	; 1
 918:	16 c0       	rjmp	.+44     	; 0x946 <__stack+0x47>
 91a:	83 2d       	mov	r24, r3
 91c:	82 60       	ori	r24, 0x02	; 2
 91e:	38 2e       	mov	r3, r24
 920:	e3 2d       	mov	r30, r3
 922:	e4 60       	ori	r30, 0x04	; 4
 924:	3e 2e       	mov	r3, r30
 926:	2a c0       	rjmp	.+84     	; 0x97c <__stack+0x7d>
 928:	f3 2d       	mov	r31, r3
 92a:	f8 60       	ori	r31, 0x08	; 8
 92c:	1d c0       	rjmp	.+58     	; 0x968 <__stack+0x69>
 92e:	37 fc       	sbrc	r3, 7
 930:	2d c0       	rjmp	.+90     	; 0x98c <__stack+0x8d>
 932:	20 ed       	ldi	r18, 0xD0	; 208
 934:	28 0f       	add	r18, r24
 936:	2a 30       	cpi	r18, 0x0A	; 10
 938:	40 f0       	brcs	.+16     	; 0x94a <__stack+0x4b>
 93a:	8e 32       	cpi	r24, 0x2E	; 46
 93c:	b9 f4       	brne	.+46     	; 0x96c <__stack+0x6d>
 93e:	36 fc       	sbrc	r3, 6
 940:	81 c1       	rjmp	.+770    	; 0xc44 <__stack+0x345>
 942:	23 2d       	mov	r18, r3
 944:	20 64       	ori	r18, 0x40	; 64
 946:	32 2e       	mov	r3, r18
 948:	19 c0       	rjmp	.+50     	; 0x97c <__stack+0x7d>
 94a:	36 fe       	sbrs	r3, 6
 94c:	06 c0       	rjmp	.+12     	; 0x95a <__stack+0x5b>
 94e:	8a e0       	ldi	r24, 0x0A	; 10
 950:	98 9e       	mul	r9, r24
 952:	20 0d       	add	r18, r0
 954:	11 24       	eor	r1, r1
 956:	92 2e       	mov	r9, r18
 958:	11 c0       	rjmp	.+34     	; 0x97c <__stack+0x7d>
 95a:	ea e0       	ldi	r30, 0x0A	; 10
 95c:	2e 9e       	mul	r2, r30
 95e:	20 0d       	add	r18, r0
 960:	11 24       	eor	r1, r1
 962:	22 2e       	mov	r2, r18
 964:	f3 2d       	mov	r31, r3
 966:	f0 62       	ori	r31, 0x20	; 32
 968:	3f 2e       	mov	r3, r31
 96a:	08 c0       	rjmp	.+16     	; 0x97c <__stack+0x7d>
 96c:	8c 36       	cpi	r24, 0x6C	; 108
 96e:	21 f4       	brne	.+8      	; 0x978 <__stack+0x79>
 970:	83 2d       	mov	r24, r3
 972:	80 68       	ori	r24, 0x80	; 128
 974:	38 2e       	mov	r3, r24
 976:	02 c0       	rjmp	.+4      	; 0x97c <__stack+0x7d>
 978:	88 36       	cpi	r24, 0x68	; 104
 97a:	41 f4       	brne	.+16     	; 0x98c <__stack+0x8d>
 97c:	f7 01       	movw	r30, r14
 97e:	93 fd       	sbrc	r25, 3
 980:	85 91       	lpm	r24, Z+
 982:	93 ff       	sbrs	r25, 3
 984:	81 91       	ld	r24, Z+
 986:	7f 01       	movw	r14, r30
 988:	81 11       	cpse	r24, r1
 98a:	b3 cf       	rjmp	.-154    	; 0x8f2 <vfprintf+0x5c>
 98c:	98 2f       	mov	r25, r24
 98e:	9f 7d       	andi	r25, 0xDF	; 223
 990:	95 54       	subi	r25, 0x45	; 69
 992:	93 30       	cpi	r25, 0x03	; 3
 994:	28 f4       	brcc	.+10     	; 0x9a0 <__stack+0xa1>
 996:	0c 5f       	subi	r16, 0xFC	; 252
 998:	1f 4f       	sbci	r17, 0xFF	; 255
 99a:	9f e3       	ldi	r25, 0x3F	; 63
 99c:	99 83       	std	Y+1, r25	; 0x01
 99e:	0d c0       	rjmp	.+26     	; 0x9ba <__stack+0xbb>
 9a0:	83 36       	cpi	r24, 0x63	; 99
 9a2:	31 f0       	breq	.+12     	; 0x9b0 <__stack+0xb1>
 9a4:	83 37       	cpi	r24, 0x73	; 115
 9a6:	71 f0       	breq	.+28     	; 0x9c4 <__stack+0xc5>
 9a8:	83 35       	cpi	r24, 0x53	; 83
 9aa:	09 f0       	breq	.+2      	; 0x9ae <__stack+0xaf>
 9ac:	59 c0       	rjmp	.+178    	; 0xa60 <__stack+0x161>
 9ae:	21 c0       	rjmp	.+66     	; 0x9f2 <__stack+0xf3>
 9b0:	f8 01       	movw	r30, r16
 9b2:	80 81       	ld	r24, Z
 9b4:	89 83       	std	Y+1, r24	; 0x01
 9b6:	0e 5f       	subi	r16, 0xFE	; 254
 9b8:	1f 4f       	sbci	r17, 0xFF	; 255
 9ba:	88 24       	eor	r8, r8
 9bc:	83 94       	inc	r8
 9be:	91 2c       	mov	r9, r1
 9c0:	53 01       	movw	r10, r6
 9c2:	13 c0       	rjmp	.+38     	; 0x9ea <__stack+0xeb>
 9c4:	28 01       	movw	r4, r16
 9c6:	f2 e0       	ldi	r31, 0x02	; 2
 9c8:	4f 0e       	add	r4, r31
 9ca:	51 1c       	adc	r5, r1
 9cc:	f8 01       	movw	r30, r16
 9ce:	a0 80       	ld	r10, Z
 9d0:	b1 80       	ldd	r11, Z+1	; 0x01
 9d2:	36 fe       	sbrs	r3, 6
 9d4:	03 c0       	rjmp	.+6      	; 0x9dc <__stack+0xdd>
 9d6:	69 2d       	mov	r22, r9
 9d8:	70 e0       	ldi	r23, 0x00	; 0
 9da:	02 c0       	rjmp	.+4      	; 0x9e0 <__stack+0xe1>
 9dc:	6f ef       	ldi	r22, 0xFF	; 255
 9de:	7f ef       	ldi	r23, 0xFF	; 255
 9e0:	c5 01       	movw	r24, r10
 9e2:	0e 94 37 06 	call	0xc6e	; 0xc6e <strnlen>
 9e6:	4c 01       	movw	r8, r24
 9e8:	82 01       	movw	r16, r4
 9ea:	f3 2d       	mov	r31, r3
 9ec:	ff 77       	andi	r31, 0x7F	; 127
 9ee:	3f 2e       	mov	r3, r31
 9f0:	16 c0       	rjmp	.+44     	; 0xa1e <__stack+0x11f>
 9f2:	28 01       	movw	r4, r16
 9f4:	22 e0       	ldi	r18, 0x02	; 2
 9f6:	42 0e       	add	r4, r18
 9f8:	51 1c       	adc	r5, r1
 9fa:	f8 01       	movw	r30, r16
 9fc:	a0 80       	ld	r10, Z
 9fe:	b1 80       	ldd	r11, Z+1	; 0x01
 a00:	36 fe       	sbrs	r3, 6
 a02:	03 c0       	rjmp	.+6      	; 0xa0a <__stack+0x10b>
 a04:	69 2d       	mov	r22, r9
 a06:	70 e0       	ldi	r23, 0x00	; 0
 a08:	02 c0       	rjmp	.+4      	; 0xa0e <__stack+0x10f>
 a0a:	6f ef       	ldi	r22, 0xFF	; 255
 a0c:	7f ef       	ldi	r23, 0xFF	; 255
 a0e:	c5 01       	movw	r24, r10
 a10:	0e 94 2c 06 	call	0xc58	; 0xc58 <strnlen_P>
 a14:	4c 01       	movw	r8, r24
 a16:	f3 2d       	mov	r31, r3
 a18:	f0 68       	ori	r31, 0x80	; 128
 a1a:	3f 2e       	mov	r3, r31
 a1c:	82 01       	movw	r16, r4
 a1e:	33 fc       	sbrc	r3, 3
 a20:	1b c0       	rjmp	.+54     	; 0xa58 <__stack+0x159>
 a22:	82 2d       	mov	r24, r2
 a24:	90 e0       	ldi	r25, 0x00	; 0
 a26:	88 16       	cp	r8, r24
 a28:	99 06       	cpc	r9, r25
 a2a:	b0 f4       	brcc	.+44     	; 0xa58 <__stack+0x159>
 a2c:	b6 01       	movw	r22, r12
 a2e:	80 e2       	ldi	r24, 0x20	; 32
 a30:	90 e0       	ldi	r25, 0x00	; 0
 a32:	0e 94 42 06 	call	0xc84	; 0xc84 <fputc>
 a36:	2a 94       	dec	r2
 a38:	f4 cf       	rjmp	.-24     	; 0xa22 <__stack+0x123>
 a3a:	f5 01       	movw	r30, r10
 a3c:	37 fc       	sbrc	r3, 7
 a3e:	85 91       	lpm	r24, Z+
 a40:	37 fe       	sbrs	r3, 7
 a42:	81 91       	ld	r24, Z+
 a44:	5f 01       	movw	r10, r30
 a46:	b6 01       	movw	r22, r12
 a48:	90 e0       	ldi	r25, 0x00	; 0
 a4a:	0e 94 42 06 	call	0xc84	; 0xc84 <fputc>
 a4e:	21 10       	cpse	r2, r1
 a50:	2a 94       	dec	r2
 a52:	21 e0       	ldi	r18, 0x01	; 1
 a54:	82 1a       	sub	r8, r18
 a56:	91 08       	sbc	r9, r1
 a58:	81 14       	cp	r8, r1
 a5a:	91 04       	cpc	r9, r1
 a5c:	71 f7       	brne	.-36     	; 0xa3a <__stack+0x13b>
 a5e:	e8 c0       	rjmp	.+464    	; 0xc30 <__stack+0x331>
 a60:	84 36       	cpi	r24, 0x64	; 100
 a62:	11 f0       	breq	.+4      	; 0xa68 <__stack+0x169>
 a64:	89 36       	cpi	r24, 0x69	; 105
 a66:	41 f5       	brne	.+80     	; 0xab8 <__stack+0x1b9>
 a68:	f8 01       	movw	r30, r16
 a6a:	37 fe       	sbrs	r3, 7
 a6c:	07 c0       	rjmp	.+14     	; 0xa7c <__stack+0x17d>
 a6e:	60 81       	ld	r22, Z
 a70:	71 81       	ldd	r23, Z+1	; 0x01
 a72:	82 81       	ldd	r24, Z+2	; 0x02
 a74:	93 81       	ldd	r25, Z+3	; 0x03
 a76:	0c 5f       	subi	r16, 0xFC	; 252
 a78:	1f 4f       	sbci	r17, 0xFF	; 255
 a7a:	08 c0       	rjmp	.+16     	; 0xa8c <__stack+0x18d>
 a7c:	60 81       	ld	r22, Z
 a7e:	71 81       	ldd	r23, Z+1	; 0x01
 a80:	07 2e       	mov	r0, r23
 a82:	00 0c       	add	r0, r0
 a84:	88 0b       	sbc	r24, r24
 a86:	99 0b       	sbc	r25, r25
 a88:	0e 5f       	subi	r16, 0xFE	; 254
 a8a:	1f 4f       	sbci	r17, 0xFF	; 255
 a8c:	f3 2d       	mov	r31, r3
 a8e:	ff 76       	andi	r31, 0x6F	; 111
 a90:	3f 2e       	mov	r3, r31
 a92:	97 ff       	sbrs	r25, 7
 a94:	09 c0       	rjmp	.+18     	; 0xaa8 <__stack+0x1a9>
 a96:	90 95       	com	r25
 a98:	80 95       	com	r24
 a9a:	70 95       	com	r23
 a9c:	61 95       	neg	r22
 a9e:	7f 4f       	sbci	r23, 0xFF	; 255
 aa0:	8f 4f       	sbci	r24, 0xFF	; 255
 aa2:	9f 4f       	sbci	r25, 0xFF	; 255
 aa4:	f0 68       	ori	r31, 0x80	; 128
 aa6:	3f 2e       	mov	r3, r31
 aa8:	2a e0       	ldi	r18, 0x0A	; 10
 aaa:	30 e0       	ldi	r19, 0x00	; 0
 aac:	a3 01       	movw	r20, r6
 aae:	0e 94 7e 06 	call	0xcfc	; 0xcfc <__ultoa_invert>
 ab2:	88 2e       	mov	r8, r24
 ab4:	86 18       	sub	r8, r6
 ab6:	45 c0       	rjmp	.+138    	; 0xb42 <__stack+0x243>
 ab8:	85 37       	cpi	r24, 0x75	; 117
 aba:	31 f4       	brne	.+12     	; 0xac8 <__stack+0x1c9>
 abc:	23 2d       	mov	r18, r3
 abe:	2f 7e       	andi	r18, 0xEF	; 239
 ac0:	b2 2e       	mov	r11, r18
 ac2:	2a e0       	ldi	r18, 0x0A	; 10
 ac4:	30 e0       	ldi	r19, 0x00	; 0
 ac6:	25 c0       	rjmp	.+74     	; 0xb12 <__stack+0x213>
 ac8:	93 2d       	mov	r25, r3
 aca:	99 7f       	andi	r25, 0xF9	; 249
 acc:	b9 2e       	mov	r11, r25
 ace:	8f 36       	cpi	r24, 0x6F	; 111
 ad0:	c1 f0       	breq	.+48     	; 0xb02 <__stack+0x203>
 ad2:	18 f4       	brcc	.+6      	; 0xada <__stack+0x1db>
 ad4:	88 35       	cpi	r24, 0x58	; 88
 ad6:	79 f0       	breq	.+30     	; 0xaf6 <__stack+0x1f7>
 ad8:	b5 c0       	rjmp	.+362    	; 0xc44 <__stack+0x345>
 ada:	80 37       	cpi	r24, 0x70	; 112
 adc:	19 f0       	breq	.+6      	; 0xae4 <__stack+0x1e5>
 ade:	88 37       	cpi	r24, 0x78	; 120
 ae0:	21 f0       	breq	.+8      	; 0xaea <__stack+0x1eb>
 ae2:	b0 c0       	rjmp	.+352    	; 0xc44 <__stack+0x345>
 ae4:	e9 2f       	mov	r30, r25
 ae6:	e0 61       	ori	r30, 0x10	; 16
 ae8:	be 2e       	mov	r11, r30
 aea:	b4 fe       	sbrs	r11, 4
 aec:	0d c0       	rjmp	.+26     	; 0xb08 <__stack+0x209>
 aee:	fb 2d       	mov	r31, r11
 af0:	f4 60       	ori	r31, 0x04	; 4
 af2:	bf 2e       	mov	r11, r31
 af4:	09 c0       	rjmp	.+18     	; 0xb08 <__stack+0x209>
 af6:	34 fe       	sbrs	r3, 4
 af8:	0a c0       	rjmp	.+20     	; 0xb0e <__stack+0x20f>
 afa:	29 2f       	mov	r18, r25
 afc:	26 60       	ori	r18, 0x06	; 6
 afe:	b2 2e       	mov	r11, r18
 b00:	06 c0       	rjmp	.+12     	; 0xb0e <__stack+0x20f>
 b02:	28 e0       	ldi	r18, 0x08	; 8
 b04:	30 e0       	ldi	r19, 0x00	; 0
 b06:	05 c0       	rjmp	.+10     	; 0xb12 <__stack+0x213>
 b08:	20 e1       	ldi	r18, 0x10	; 16
 b0a:	30 e0       	ldi	r19, 0x00	; 0
 b0c:	02 c0       	rjmp	.+4      	; 0xb12 <__stack+0x213>
 b0e:	20 e1       	ldi	r18, 0x10	; 16
 b10:	32 e0       	ldi	r19, 0x02	; 2
 b12:	f8 01       	movw	r30, r16
 b14:	b7 fe       	sbrs	r11, 7
 b16:	07 c0       	rjmp	.+14     	; 0xb26 <__stack+0x227>
 b18:	60 81       	ld	r22, Z
 b1a:	71 81       	ldd	r23, Z+1	; 0x01
 b1c:	82 81       	ldd	r24, Z+2	; 0x02
 b1e:	93 81       	ldd	r25, Z+3	; 0x03
 b20:	0c 5f       	subi	r16, 0xFC	; 252
 b22:	1f 4f       	sbci	r17, 0xFF	; 255
 b24:	06 c0       	rjmp	.+12     	; 0xb32 <__stack+0x233>
 b26:	60 81       	ld	r22, Z
 b28:	71 81       	ldd	r23, Z+1	; 0x01
 b2a:	80 e0       	ldi	r24, 0x00	; 0
 b2c:	90 e0       	ldi	r25, 0x00	; 0
 b2e:	0e 5f       	subi	r16, 0xFE	; 254
 b30:	1f 4f       	sbci	r17, 0xFF	; 255
 b32:	a3 01       	movw	r20, r6
 b34:	0e 94 7e 06 	call	0xcfc	; 0xcfc <__ultoa_invert>
 b38:	88 2e       	mov	r8, r24
 b3a:	86 18       	sub	r8, r6
 b3c:	fb 2d       	mov	r31, r11
 b3e:	ff 77       	andi	r31, 0x7F	; 127
 b40:	3f 2e       	mov	r3, r31
 b42:	36 fe       	sbrs	r3, 6
 b44:	0d c0       	rjmp	.+26     	; 0xb60 <__stack+0x261>
 b46:	23 2d       	mov	r18, r3
 b48:	2e 7f       	andi	r18, 0xFE	; 254
 b4a:	a2 2e       	mov	r10, r18
 b4c:	89 14       	cp	r8, r9
 b4e:	58 f4       	brcc	.+22     	; 0xb66 <__stack+0x267>
 b50:	34 fe       	sbrs	r3, 4
 b52:	0b c0       	rjmp	.+22     	; 0xb6a <__stack+0x26b>
 b54:	32 fc       	sbrc	r3, 2
 b56:	09 c0       	rjmp	.+18     	; 0xb6a <__stack+0x26b>
 b58:	83 2d       	mov	r24, r3
 b5a:	8e 7e       	andi	r24, 0xEE	; 238
 b5c:	a8 2e       	mov	r10, r24
 b5e:	05 c0       	rjmp	.+10     	; 0xb6a <__stack+0x26b>
 b60:	b8 2c       	mov	r11, r8
 b62:	a3 2c       	mov	r10, r3
 b64:	03 c0       	rjmp	.+6      	; 0xb6c <__stack+0x26d>
 b66:	b8 2c       	mov	r11, r8
 b68:	01 c0       	rjmp	.+2      	; 0xb6c <__stack+0x26d>
 b6a:	b9 2c       	mov	r11, r9
 b6c:	a4 fe       	sbrs	r10, 4
 b6e:	0f c0       	rjmp	.+30     	; 0xb8e <__stack+0x28f>
 b70:	fe 01       	movw	r30, r28
 b72:	e8 0d       	add	r30, r8
 b74:	f1 1d       	adc	r31, r1
 b76:	80 81       	ld	r24, Z
 b78:	80 33       	cpi	r24, 0x30	; 48
 b7a:	21 f4       	brne	.+8      	; 0xb84 <__stack+0x285>
 b7c:	9a 2d       	mov	r25, r10
 b7e:	99 7e       	andi	r25, 0xE9	; 233
 b80:	a9 2e       	mov	r10, r25
 b82:	09 c0       	rjmp	.+18     	; 0xb96 <__stack+0x297>
 b84:	a2 fe       	sbrs	r10, 2
 b86:	06 c0       	rjmp	.+12     	; 0xb94 <__stack+0x295>
 b88:	b3 94       	inc	r11
 b8a:	b3 94       	inc	r11
 b8c:	04 c0       	rjmp	.+8      	; 0xb96 <__stack+0x297>
 b8e:	8a 2d       	mov	r24, r10
 b90:	86 78       	andi	r24, 0x86	; 134
 b92:	09 f0       	breq	.+2      	; 0xb96 <__stack+0x297>
 b94:	b3 94       	inc	r11
 b96:	a3 fc       	sbrc	r10, 3
 b98:	11 c0       	rjmp	.+34     	; 0xbbc <__stack+0x2bd>
 b9a:	a0 fe       	sbrs	r10, 0
 b9c:	06 c0       	rjmp	.+12     	; 0xbaa <__stack+0x2ab>
 b9e:	b2 14       	cp	r11, r2
 ba0:	88 f4       	brcc	.+34     	; 0xbc4 <__stack+0x2c5>
 ba2:	28 0c       	add	r2, r8
 ba4:	92 2c       	mov	r9, r2
 ba6:	9b 18       	sub	r9, r11
 ba8:	0e c0       	rjmp	.+28     	; 0xbc6 <__stack+0x2c7>
 baa:	b2 14       	cp	r11, r2
 bac:	60 f4       	brcc	.+24     	; 0xbc6 <__stack+0x2c7>
 bae:	b6 01       	movw	r22, r12
 bb0:	80 e2       	ldi	r24, 0x20	; 32
 bb2:	90 e0       	ldi	r25, 0x00	; 0
 bb4:	0e 94 42 06 	call	0xc84	; 0xc84 <fputc>
 bb8:	b3 94       	inc	r11
 bba:	f7 cf       	rjmp	.-18     	; 0xbaa <__stack+0x2ab>
 bbc:	b2 14       	cp	r11, r2
 bbe:	18 f4       	brcc	.+6      	; 0xbc6 <__stack+0x2c7>
 bc0:	2b 18       	sub	r2, r11
 bc2:	02 c0       	rjmp	.+4      	; 0xbc8 <__stack+0x2c9>
 bc4:	98 2c       	mov	r9, r8
 bc6:	21 2c       	mov	r2, r1
 bc8:	a4 fe       	sbrs	r10, 4
 bca:	10 c0       	rjmp	.+32     	; 0xbec <__stack+0x2ed>
 bcc:	b6 01       	movw	r22, r12
 bce:	80 e3       	ldi	r24, 0x30	; 48
 bd0:	90 e0       	ldi	r25, 0x00	; 0
 bd2:	0e 94 42 06 	call	0xc84	; 0xc84 <fputc>
 bd6:	a2 fe       	sbrs	r10, 2
 bd8:	17 c0       	rjmp	.+46     	; 0xc08 <__stack+0x309>
 bda:	a1 fc       	sbrc	r10, 1
 bdc:	03 c0       	rjmp	.+6      	; 0xbe4 <__stack+0x2e5>
 bde:	88 e7       	ldi	r24, 0x78	; 120
 be0:	90 e0       	ldi	r25, 0x00	; 0
 be2:	02 c0       	rjmp	.+4      	; 0xbe8 <__stack+0x2e9>
 be4:	88 e5       	ldi	r24, 0x58	; 88
 be6:	90 e0       	ldi	r25, 0x00	; 0
 be8:	b6 01       	movw	r22, r12
 bea:	0c c0       	rjmp	.+24     	; 0xc04 <__stack+0x305>
 bec:	8a 2d       	mov	r24, r10
 bee:	86 78       	andi	r24, 0x86	; 134
 bf0:	59 f0       	breq	.+22     	; 0xc08 <__stack+0x309>
 bf2:	a1 fe       	sbrs	r10, 1
 bf4:	02 c0       	rjmp	.+4      	; 0xbfa <__stack+0x2fb>
 bf6:	8b e2       	ldi	r24, 0x2B	; 43
 bf8:	01 c0       	rjmp	.+2      	; 0xbfc <__stack+0x2fd>
 bfa:	80 e2       	ldi	r24, 0x20	; 32
 bfc:	a7 fc       	sbrc	r10, 7
 bfe:	8d e2       	ldi	r24, 0x2D	; 45
 c00:	b6 01       	movw	r22, r12
 c02:	90 e0       	ldi	r25, 0x00	; 0
 c04:	0e 94 42 06 	call	0xc84	; 0xc84 <fputc>
 c08:	89 14       	cp	r8, r9
 c0a:	38 f4       	brcc	.+14     	; 0xc1a <__stack+0x31b>
 c0c:	b6 01       	movw	r22, r12
 c0e:	80 e3       	ldi	r24, 0x30	; 48
 c10:	90 e0       	ldi	r25, 0x00	; 0
 c12:	0e 94 42 06 	call	0xc84	; 0xc84 <fputc>
 c16:	9a 94       	dec	r9
 c18:	f7 cf       	rjmp	.-18     	; 0xc08 <__stack+0x309>
 c1a:	8a 94       	dec	r8
 c1c:	f3 01       	movw	r30, r6
 c1e:	e8 0d       	add	r30, r8
 c20:	f1 1d       	adc	r31, r1
 c22:	80 81       	ld	r24, Z
 c24:	b6 01       	movw	r22, r12
 c26:	90 e0       	ldi	r25, 0x00	; 0
 c28:	0e 94 42 06 	call	0xc84	; 0xc84 <fputc>
 c2c:	81 10       	cpse	r8, r1
 c2e:	f5 cf       	rjmp	.-22     	; 0xc1a <__stack+0x31b>
 c30:	22 20       	and	r2, r2
 c32:	09 f4       	brne	.+2      	; 0xc36 <__stack+0x337>
 c34:	42 ce       	rjmp	.-892    	; 0x8ba <vfprintf+0x24>
 c36:	b6 01       	movw	r22, r12
 c38:	80 e2       	ldi	r24, 0x20	; 32
 c3a:	90 e0       	ldi	r25, 0x00	; 0
 c3c:	0e 94 42 06 	call	0xc84	; 0xc84 <fputc>
 c40:	2a 94       	dec	r2
 c42:	f6 cf       	rjmp	.-20     	; 0xc30 <__stack+0x331>
 c44:	f6 01       	movw	r30, r12
 c46:	86 81       	ldd	r24, Z+6	; 0x06
 c48:	97 81       	ldd	r25, Z+7	; 0x07
 c4a:	02 c0       	rjmp	.+4      	; 0xc50 <__stack+0x351>
 c4c:	8f ef       	ldi	r24, 0xFF	; 255
 c4e:	9f ef       	ldi	r25, 0xFF	; 255
 c50:	2b 96       	adiw	r28, 0x0b	; 11
 c52:	e2 e1       	ldi	r30, 0x12	; 18
 c54:	0c 94 f8 06 	jmp	0xdf0	; 0xdf0 <__epilogue_restores__>

00000c58 <strnlen_P>:
 c58:	fc 01       	movw	r30, r24
 c5a:	05 90       	lpm	r0, Z+
 c5c:	61 50       	subi	r22, 0x01	; 1
 c5e:	70 40       	sbci	r23, 0x00	; 0
 c60:	01 10       	cpse	r0, r1
 c62:	d8 f7       	brcc	.-10     	; 0xc5a <strnlen_P+0x2>
 c64:	80 95       	com	r24
 c66:	90 95       	com	r25
 c68:	8e 0f       	add	r24, r30
 c6a:	9f 1f       	adc	r25, r31
 c6c:	08 95       	ret

00000c6e <strnlen>:
 c6e:	fc 01       	movw	r30, r24
 c70:	61 50       	subi	r22, 0x01	; 1
 c72:	70 40       	sbci	r23, 0x00	; 0
 c74:	01 90       	ld	r0, Z+
 c76:	01 10       	cpse	r0, r1
 c78:	d8 f7       	brcc	.-10     	; 0xc70 <strnlen+0x2>
 c7a:	80 95       	com	r24
 c7c:	90 95       	com	r25
 c7e:	8e 0f       	add	r24, r30
 c80:	9f 1f       	adc	r25, r31
 c82:	08 95       	ret

00000c84 <fputc>:
 c84:	0f 93       	push	r16
 c86:	1f 93       	push	r17
 c88:	cf 93       	push	r28
 c8a:	df 93       	push	r29
 c8c:	fb 01       	movw	r30, r22
 c8e:	23 81       	ldd	r18, Z+3	; 0x03
 c90:	21 fd       	sbrc	r18, 1
 c92:	03 c0       	rjmp	.+6      	; 0xc9a <fputc+0x16>
 c94:	8f ef       	ldi	r24, 0xFF	; 255
 c96:	9f ef       	ldi	r25, 0xFF	; 255
 c98:	2c c0       	rjmp	.+88     	; 0xcf2 <fputc+0x6e>
 c9a:	22 ff       	sbrs	r18, 2
 c9c:	16 c0       	rjmp	.+44     	; 0xcca <fputc+0x46>
 c9e:	46 81       	ldd	r20, Z+6	; 0x06
 ca0:	57 81       	ldd	r21, Z+7	; 0x07
 ca2:	24 81       	ldd	r18, Z+4	; 0x04
 ca4:	35 81       	ldd	r19, Z+5	; 0x05
 ca6:	42 17       	cp	r20, r18
 ca8:	53 07       	cpc	r21, r19
 caa:	44 f4       	brge	.+16     	; 0xcbc <fputc+0x38>
 cac:	a0 81       	ld	r26, Z
 cae:	b1 81       	ldd	r27, Z+1	; 0x01
 cb0:	9d 01       	movw	r18, r26
 cb2:	2f 5f       	subi	r18, 0xFF	; 255
 cb4:	3f 4f       	sbci	r19, 0xFF	; 255
 cb6:	31 83       	std	Z+1, r19	; 0x01
 cb8:	20 83       	st	Z, r18
 cba:	8c 93       	st	X, r24
 cbc:	26 81       	ldd	r18, Z+6	; 0x06
 cbe:	37 81       	ldd	r19, Z+7	; 0x07
 cc0:	2f 5f       	subi	r18, 0xFF	; 255
 cc2:	3f 4f       	sbci	r19, 0xFF	; 255
 cc4:	37 83       	std	Z+7, r19	; 0x07
 cc6:	26 83       	std	Z+6, r18	; 0x06
 cc8:	14 c0       	rjmp	.+40     	; 0xcf2 <fputc+0x6e>
 cca:	8b 01       	movw	r16, r22
 ccc:	ec 01       	movw	r28, r24
 cce:	fb 01       	movw	r30, r22
 cd0:	00 84       	ldd	r0, Z+8	; 0x08
 cd2:	f1 85       	ldd	r31, Z+9	; 0x09
 cd4:	e0 2d       	mov	r30, r0
 cd6:	09 95       	icall
 cd8:	89 2b       	or	r24, r25
 cda:	e1 f6       	brne	.-72     	; 0xc94 <fputc+0x10>
 cdc:	d8 01       	movw	r26, r16
 cde:	16 96       	adiw	r26, 0x06	; 6
 ce0:	8d 91       	ld	r24, X+
 ce2:	9c 91       	ld	r25, X
 ce4:	17 97       	sbiw	r26, 0x07	; 7
 ce6:	01 96       	adiw	r24, 0x01	; 1
 ce8:	17 96       	adiw	r26, 0x07	; 7
 cea:	9c 93       	st	X, r25
 cec:	8e 93       	st	-X, r24
 cee:	16 97       	sbiw	r26, 0x06	; 6
 cf0:	ce 01       	movw	r24, r28
 cf2:	df 91       	pop	r29
 cf4:	cf 91       	pop	r28
 cf6:	1f 91       	pop	r17
 cf8:	0f 91       	pop	r16
 cfa:	08 95       	ret

00000cfc <__ultoa_invert>:
 cfc:	fa 01       	movw	r30, r20
 cfe:	aa 27       	eor	r26, r26
 d00:	28 30       	cpi	r18, 0x08	; 8
 d02:	51 f1       	breq	.+84     	; 0xd58 <__ultoa_invert+0x5c>
 d04:	20 31       	cpi	r18, 0x10	; 16
 d06:	81 f1       	breq	.+96     	; 0xd68 <__ultoa_invert+0x6c>
 d08:	e8 94       	clt
 d0a:	6f 93       	push	r22
 d0c:	6e 7f       	andi	r22, 0xFE	; 254
 d0e:	6e 5f       	subi	r22, 0xFE	; 254
 d10:	7f 4f       	sbci	r23, 0xFF	; 255
 d12:	8f 4f       	sbci	r24, 0xFF	; 255
 d14:	9f 4f       	sbci	r25, 0xFF	; 255
 d16:	af 4f       	sbci	r26, 0xFF	; 255
 d18:	b1 e0       	ldi	r27, 0x01	; 1
 d1a:	3e d0       	rcall	.+124    	; 0xd98 <__ultoa_invert+0x9c>
 d1c:	b4 e0       	ldi	r27, 0x04	; 4
 d1e:	3c d0       	rcall	.+120    	; 0xd98 <__ultoa_invert+0x9c>
 d20:	67 0f       	add	r22, r23
 d22:	78 1f       	adc	r23, r24
 d24:	89 1f       	adc	r24, r25
 d26:	9a 1f       	adc	r25, r26
 d28:	a1 1d       	adc	r26, r1
 d2a:	68 0f       	add	r22, r24
 d2c:	79 1f       	adc	r23, r25
 d2e:	8a 1f       	adc	r24, r26
 d30:	91 1d       	adc	r25, r1
 d32:	a1 1d       	adc	r26, r1
 d34:	6a 0f       	add	r22, r26
 d36:	71 1d       	adc	r23, r1
 d38:	81 1d       	adc	r24, r1
 d3a:	91 1d       	adc	r25, r1
 d3c:	a1 1d       	adc	r26, r1
 d3e:	20 d0       	rcall	.+64     	; 0xd80 <__ultoa_invert+0x84>
 d40:	09 f4       	brne	.+2      	; 0xd44 <__ultoa_invert+0x48>
 d42:	68 94       	set
 d44:	3f 91       	pop	r19
 d46:	2a e0       	ldi	r18, 0x0A	; 10
 d48:	26 9f       	mul	r18, r22
 d4a:	11 24       	eor	r1, r1
 d4c:	30 19       	sub	r19, r0
 d4e:	30 5d       	subi	r19, 0xD0	; 208
 d50:	31 93       	st	Z+, r19
 d52:	de f6       	brtc	.-74     	; 0xd0a <__ultoa_invert+0xe>
 d54:	cf 01       	movw	r24, r30
 d56:	08 95       	ret
 d58:	46 2f       	mov	r20, r22
 d5a:	47 70       	andi	r20, 0x07	; 7
 d5c:	40 5d       	subi	r20, 0xD0	; 208
 d5e:	41 93       	st	Z+, r20
 d60:	b3 e0       	ldi	r27, 0x03	; 3
 d62:	0f d0       	rcall	.+30     	; 0xd82 <__ultoa_invert+0x86>
 d64:	c9 f7       	brne	.-14     	; 0xd58 <__ultoa_invert+0x5c>
 d66:	f6 cf       	rjmp	.-20     	; 0xd54 <__ultoa_invert+0x58>
 d68:	46 2f       	mov	r20, r22
 d6a:	4f 70       	andi	r20, 0x0F	; 15
 d6c:	40 5d       	subi	r20, 0xD0	; 208
 d6e:	4a 33       	cpi	r20, 0x3A	; 58
 d70:	18 f0       	brcs	.+6      	; 0xd78 <__ultoa_invert+0x7c>
 d72:	49 5d       	subi	r20, 0xD9	; 217
 d74:	31 fd       	sbrc	r19, 1
 d76:	40 52       	subi	r20, 0x20	; 32
 d78:	41 93       	st	Z+, r20
 d7a:	02 d0       	rcall	.+4      	; 0xd80 <__ultoa_invert+0x84>
 d7c:	a9 f7       	brne	.-22     	; 0xd68 <__ultoa_invert+0x6c>
 d7e:	ea cf       	rjmp	.-44     	; 0xd54 <__ultoa_invert+0x58>
 d80:	b4 e0       	ldi	r27, 0x04	; 4
 d82:	a6 95       	lsr	r26
 d84:	97 95       	ror	r25
 d86:	87 95       	ror	r24
 d88:	77 95       	ror	r23
 d8a:	67 95       	ror	r22
 d8c:	ba 95       	dec	r27
 d8e:	c9 f7       	brne	.-14     	; 0xd82 <__ultoa_invert+0x86>
 d90:	00 97       	sbiw	r24, 0x00	; 0
 d92:	61 05       	cpc	r22, r1
 d94:	71 05       	cpc	r23, r1
 d96:	08 95       	ret
 d98:	9b 01       	movw	r18, r22
 d9a:	ac 01       	movw	r20, r24
 d9c:	0a 2e       	mov	r0, r26
 d9e:	06 94       	lsr	r0
 da0:	57 95       	ror	r21
 da2:	47 95       	ror	r20
 da4:	37 95       	ror	r19
 da6:	27 95       	ror	r18
 da8:	ba 95       	dec	r27
 daa:	c9 f7       	brne	.-14     	; 0xd9e <__ultoa_invert+0xa2>
 dac:	62 0f       	add	r22, r18
 dae:	73 1f       	adc	r23, r19
 db0:	84 1f       	adc	r24, r20
 db2:	95 1f       	adc	r25, r21
 db4:	a0 1d       	adc	r26, r0
 db6:	08 95       	ret

00000db8 <__prologue_saves__>:
 db8:	2f 92       	push	r2
 dba:	3f 92       	push	r3
 dbc:	4f 92       	push	r4
 dbe:	5f 92       	push	r5
 dc0:	6f 92       	push	r6
 dc2:	7f 92       	push	r7
 dc4:	8f 92       	push	r8
 dc6:	9f 92       	push	r9
 dc8:	af 92       	push	r10
 dca:	bf 92       	push	r11
 dcc:	cf 92       	push	r12
 dce:	df 92       	push	r13
 dd0:	ef 92       	push	r14
 dd2:	ff 92       	push	r15
 dd4:	0f 93       	push	r16
 dd6:	1f 93       	push	r17
 dd8:	cf 93       	push	r28
 dda:	df 93       	push	r29
 ddc:	cd b7       	in	r28, 0x3d	; 61
 dde:	de b7       	in	r29, 0x3e	; 62
 de0:	ca 1b       	sub	r28, r26
 de2:	db 0b       	sbc	r29, r27
 de4:	0f b6       	in	r0, 0x3f	; 63
 de6:	f8 94       	cli
 de8:	de bf       	out	0x3e, r29	; 62
 dea:	0f be       	out	0x3f, r0	; 63
 dec:	cd bf       	out	0x3d, r28	; 61
 dee:	09 94       	ijmp

00000df0 <__epilogue_restores__>:
 df0:	2a 88       	ldd	r2, Y+18	; 0x12
 df2:	39 88       	ldd	r3, Y+17	; 0x11
 df4:	48 88       	ldd	r4, Y+16	; 0x10
 df6:	5f 84       	ldd	r5, Y+15	; 0x0f
 df8:	6e 84       	ldd	r6, Y+14	; 0x0e
 dfa:	7d 84       	ldd	r7, Y+13	; 0x0d
 dfc:	8c 84       	ldd	r8, Y+12	; 0x0c
 dfe:	9b 84       	ldd	r9, Y+11	; 0x0b
 e00:	aa 84       	ldd	r10, Y+10	; 0x0a
 e02:	b9 84       	ldd	r11, Y+9	; 0x09
 e04:	c8 84       	ldd	r12, Y+8	; 0x08
 e06:	df 80       	ldd	r13, Y+7	; 0x07
 e08:	ee 80       	ldd	r14, Y+6	; 0x06
 e0a:	fd 80       	ldd	r15, Y+5	; 0x05
 e0c:	0c 81       	ldd	r16, Y+4	; 0x04
 e0e:	1b 81       	ldd	r17, Y+3	; 0x03
 e10:	aa 81       	ldd	r26, Y+2	; 0x02
 e12:	b9 81       	ldd	r27, Y+1	; 0x01
 e14:	ce 0f       	add	r28, r30
 e16:	d1 1d       	adc	r29, r1
 e18:	0f b6       	in	r0, 0x3f	; 63
 e1a:	f8 94       	cli
 e1c:	de bf       	out	0x3e, r29	; 62
 e1e:	0f be       	out	0x3f, r0	; 63
 e20:	cd bf       	out	0x3d, r28	; 61
 e22:	ed 01       	movw	r28, r26
 e24:	08 95       	ret

00000e26 <_exit>:
 e26:	f8 94       	cli

00000e28 <__stop_program>:
 e28:	ff cf       	rjmp	.-2      	; 0xe28 <__stop_program>
